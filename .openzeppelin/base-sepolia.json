{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xb7EA7ee0E36591083daE857F0bc11fF86E07B02D",
    "txHash": "0x8f2ed9a76f3bfc6360bc480db94c8dcef8addc14ff91dbae6f6c75e51ea7f027"
  },
  "proxies": [
    {
      "address": "0x6f20a2A12877406721f083Efdf9E89D65628c4de",
      "txHash": "0x9eb4b3b9cf6906c6079381c54fbbcd542aa3264e29c64c4af35d88dec5e78ef8",
      "kind": "transparent"
    },
    {
      "address": "0x172c1f448fE0BE720eA19211a252C43Bc84ca604",
      "txHash": "0x6ae5c14c0389a3614cbbe16073d5bc192a5b3f150d9619a28505403c85a53556",
      "kind": "transparent"
    },
    {
      "address": "0xa072919d67801b24DE134ee8fb9E1b58dE39a8a6",
      "txHash": "0xaf999de4bdd2c8ac7b90f3f611ee42e3e7d3a045dc31ca58221eb5b674c104e0",
      "kind": "transparent"
    },
    {
      "address": "0x9C50604268E8CF3E721Fb05b64022C8F512F891f",
      "txHash": "0x23820e04061c4b0a04247d614e207b2c32ba50d1f0ff8f104f01de46cf9efb83",
      "kind": "transparent"
    },
    {
      "address": "0xa40E1124B10fC9f1A4F0b10f1cA855Fa62EdCb92",
      "txHash": "0xf1693a75e1a103728c845deb1ed1cd8cfe2375e597dcfdcbcf8b144be8dcb845",
      "kind": "transparent"
    },
    {
      "address": "0x947451c51a6bd7165E19259DC091917A6e5f7120",
      "txHash": "0xec04209b72480785978573fb8355642f615d7fa368270834ad602b2c88d4f683",
      "kind": "transparent"
    },
    {
      "address": "0xE9A6960e802F6f792dDa82398AA9CCaC9a4F770c",
      "txHash": "0x8903afaefedd0b565716f21f2167b13de61f8ce7e9852ace956b9d0f8b5aee82",
      "kind": "transparent"
    },
    {
      "address": "0x1601Dfcc850257F1CA20360812dC85280dB6093F",
      "txHash": "0x2b403fd613e5fa0a6710aa7426426582469e9e582880bc6a2e52bc029cdc9f78",
      "kind": "transparent"
    },
    {
      "address": "0x6f2B1C9c56379950Ea692fd67aDCE3c73D3a2216",
      "txHash": "0x6bb3f22f6f4bdb9293f7369a4cd7d3588e3fc4609bb03791c911c45c47572d00",
      "kind": "transparent"
    },
    {
      "address": "0x7d07C7Afe7BDc7977BE71e5f59C05E82995761De",
      "txHash": "0x32d5cd5a4d5afe73b82459115a15d20b336a583f0029be9c50dad6202726e085",
      "kind": "transparent"
    },
    {
      "address": "0x288c330dB8e2Efc7603035b548E7DE675BCE649f",
      "txHash": "0x91297c1055042a2964a2ebff72c38cd924ec7b2f8692534a4e947f55f1bae0b4",
      "kind": "transparent"
    },
    {
      "address": "0x2cC4A8752628d6f6Cd067067F47bb0Dc56c45232",
      "txHash": "0x0a701721395e27c0c03fe004021b754f5ee638a78d606c3833eb49bd9e8378d6",
      "kind": "transparent"
    },
    {
      "address": "0x4C243C781fc96E6be932263b0Df9b12747Ddab85",
      "txHash": "0x4747e0064a3a38138908ec6120e3816cf539c9726c233aaef8ed1a282e303776",
      "kind": "transparent"
    },
    {
      "address": "0xB6F026f1F3C2396f3c73e580a8F5CEFB9021EAe7",
      "txHash": "0x85fddc702d7e791fc58219a10fe0e920e9f83ff2157c6002e0a8ef6b0ae6dfff",
      "kind": "transparent"
    },
    {
      "address": "0x249BC3195AB22352124CEf50F9a6691239FebbFb",
      "txHash": "0x77e2f9cdcf7e783176033ca193e06e7d0e6ac8a6230cb51e56cc9a2aea2e2776",
      "kind": "transparent"
    },
    {
      "address": "0x0fBFA9e496681e2f4ae4D03De76a63Ad2bBB6610",
      "txHash": "0x792e113cd2b4fbca29eba9b90ca9065b5c259925b025fe5409192ecfce190ded",
      "kind": "transparent"
    },
    {
      "address": "0x2BF4504C1a1d809D2cA077a18c39A97a1Ea98393",
      "txHash": "0xc57990cd0e9d6a4344dc257a460353557604fbb048b2a5bb593d3417af5fe7bd",
      "kind": "transparent"
    },
    {
      "address": "0xa7Feb7F4e5DF423D9bBd7e52032Da6d1AeB4986b",
      "txHash": "0xb22da871664cc0f3a32ab59958537173858332c73758ecf657204e8f67f217b3",
      "kind": "transparent"
    },
    {
      "address": "0xc1F62293Ff30B2c212C5B8Dcec42199C99E706ab",
      "txHash": "0x8b2dc0db50af789f690678e2f400699bdc694c61f7341e87f3177c4ce5a126ed",
      "kind": "transparent"
    },
    {
      "address": "0x98A1baC4B8F17edeDAfa6c29222dE4deB2CD8BF1",
      "txHash": "0xc16c8bbb1231a49d101f4f32414c51a311edfb35851d006da943ad2eef336a78",
      "kind": "transparent"
    },
    {
      "address": "0xC8F7dAde6eC06aED5484f4184d95Eb8F773635D5",
      "txHash": "0x7a70b03e2d86febe5a791dbde4694c60916cad9b41d6dc92e83ab784af67e360",
      "kind": "transparent"
    },
    {
      "address": "0x799066eB7297A9298cD8D09183533Bf7048dF4AA",
      "txHash": "0x27d18d40f98ee08e26c635ff758cc00abf90616f8c4433227f445a02fdea11ac",
      "kind": "transparent"
    },
    {
      "address": "0x49718eAe6e80E22cff7A1597C374B53F0df758DD",
      "txHash": "0xe378b21bc3b3dee6a2093c7dde2d465f5556e4169530a94fcfdfffa31c0cc69a",
      "kind": "transparent"
    },
    {
      "address": "0x2BF0CE3ADCcfa2Df43BB4363602D5FDb492D22de",
      "txHash": "0x4d472713fb3d416e1c1ff5a25a6a7d7cc90c81cae3bdbc84f1fb15db485e0208",
      "kind": "transparent"
    },
    {
      "address": "0x2BAa1ea44Bdc30848E096Ca8730F4De9c3B98b46",
      "txHash": "0x348b2530c5e432d937a31837a0725057399055711209367f0e2a263a160a5d3e",
      "kind": "transparent"
    },
    {
      "address": "0x01C14A38e7C1805f5C718DBd0c72Bc325189bb33",
      "txHash": "0x334c4f51dd601a23387f7c72c947b46976dea8d7a6c6c769ad813a3f1833680a",
      "kind": "transparent"
    },
    {
      "address": "0x2e5C6ECF0c13F79Ae5C9867cEa83eEd7f38c8258",
      "txHash": "0xb4a760ea148cfe964545a26b2fe5a685d20da250fbad215110a250e3091323e0",
      "kind": "transparent"
    },
    {
      "address": "0x4229D5e7d4abd0e7ffa824445c0AEac6ddA6c82b",
      "txHash": "0x0697ff4a6f7c3a47a8970da6a065f5736df282b606bbfca2043aa72513564f16",
      "kind": "transparent"
    },
    {
      "address": "0x9C2c77Adf81CF8896947cDf3813213b04b3FD239",
      "txHash": "0x2e9c9d9bb5875e01cc739cab9ca2e1729070e8fee6a13e7d81eaaf0150ec41b4",
      "kind": "transparent"
    },
    {
      "address": "0x2740b19f83A8986C50aD69FEa3aD9a91608e0aaE",
      "txHash": "0x7e7261b33373da228995e8d1a4121dd0c1f69846fd5655a12f1cddf5c8911dd6",
      "kind": "transparent"
    },
    {
      "address": "0xAFA93Bff5e74521D85733b349c6dE4E0CB516E67",
      "txHash": "0xa584754e3d9d54298fa30352ee31fe28923fac7b6ea44f2d1fb8f2c9ca1b0ab2",
      "kind": "transparent"
    },
    {
      "address": "0x2Af3fb33a49EaA8A9813BCf26249b34273CD353C",
      "txHash": "0xa09496d1c62721ab3b54791f3cb82d4a7ca44150e715d25e89248e93f2435234",
      "kind": "transparent"
    },
    {
      "address": "0xc0E77B61498ecC0f1F34322CB3A7c4420500131E",
      "txHash": "0xfedca4daf94e9d552293604b94566bfbb4327b9afe59d78df61582bcea0d6739",
      "kind": "transparent"
    },
    {
      "address": "0xffdC47945B1b20752557DBF588a4C805669852Fe",
      "txHash": "0x189fe14a9b566408ef81eb049615af3eeb838f078b39da5c4b14d3dd99203018",
      "kind": "transparent"
    },
    {
      "address": "0x630b89CB56a0717802E93bc871B1B653d9237bEB",
      "txHash": "0x68e1c5b9a605848109c70f355e614f1dc7a2aebc709dfb66323a9942603238ec",
      "kind": "transparent"
    },
    {
      "address": "0x19c2766775dfFc323Ea24825d442f6f51cdF59f4",
      "txHash": "0x8dc5470f98ec1401646f85523726f1cfc43a7e9663c593da03b0f0312613e924",
      "kind": "transparent"
    },
    {
      "address": "0x1cE9A4A35047606e9265377416854cF2B2a1C4D5",
      "txHash": "0xbb27d4efd9ce7b6bb0c5479989f8f2bf862f348a79748a433358c11b32cbd21e",
      "kind": "transparent"
    },
    {
      "address": "0xf8407A9c314613e0012d001e6b640b52935A01D4",
      "txHash": "0xef6e4e50db40833abf4ab254833e289b826bdc0a9330d9d235222b4d27ac8ba5",
      "kind": "transparent"
    },
    {
      "address": "0xC21E272bb3732cAF406a020a59a095Ee60FF1764",
      "txHash": "0xf70feec75b9748364e25d6ac8161cbaf309e0ef89613cb7a7fd4203f79115376",
      "kind": "transparent"
    },
    {
      "address": "0xC63EDB4B67E6888ec2B34134CfE6C8ff2557eddf",
      "txHash": "0x918b0770eb200680310caab185110a0cafb8c3868a5c365556e85b83d2053a50",
      "kind": "transparent"
    },
    {
      "address": "0xDa84360dfB5f363477F34b6D4D3Fe482444Aad6a",
      "txHash": "0x1cb9b67ee65dd15532b817215f203700d8b4284d0beb1fd0f598b719212714ae",
      "kind": "transparent"
    },
    {
      "address": "0x8a905c552292a4C8A30a2DE7d784C2D31204Eb67",
      "txHash": "0x0405d5955e1c0e3d9fe33205daf4b90fcdac5ee8d5d096062d789034178315c6",
      "kind": "transparent"
    },
    {
      "address": "0x998E1C5A744EB5E907b5D968C8E407219677b735",
      "txHash": "0xa422f20e49d7094984d41dd35133a50d9974b52822a89d5ac0a4a26dbcff0d19",
      "kind": "transparent"
    },
    {
      "address": "0x27527D3d66Ff8730a00E17C24d2A63C4d35774a4",
      "txHash": "0x65f9c889c73a6d05e28212867f1016de3bae7c77997310aaa21608b2489f58f7",
      "kind": "transparent"
    },
    {
      "address": "0x8d77356FA9D11007Cf3cA09491596B668AB95Ef4",
      "txHash": "0x11a7d192fb36cd15f2c5b8a02cd5b05090118dfa5f57f43f243b53329d975899",
      "kind": "transparent"
    },
    {
      "address": "0x6F9191eD24acd9F2892E66954e4B544885745877",
      "txHash": "0x8ac6084aaec6510f0cd322caa7e92550474473f7be5eedd2423640eb1b0de938",
      "kind": "transparent"
    },
    {
      "address": "0x830710FCf6727AE5596C448F50379E69c2Eef3DF",
      "txHash": "0x5376e57ff561bb7532f7c019ad2af2a54aede973abb6b89ff368cfc482ad4e20",
      "kind": "transparent"
    },
    {
      "address": "0x87482206A5D305Ed20DC0a7576F7AF7FfBCc7982",
      "txHash": "0x7117589b2becefb271f90484c83ac18f9d1c0df73a9d4406539113562c9775bb",
      "kind": "transparent"
    },
    {
      "address": "0x439a1761F9E84817385550845C1c76e15e141B7a",
      "txHash": "0xae89b9b2b4e95a5f7aa3001597e1dc81191d817c5fc9b7f9bb288c32d894bb3f",
      "kind": "transparent"
    },
    {
      "address": "0x8AcB4C83dCe941553f4c27236e36f9dfC2C9FB44",
      "txHash": "0x1651afd42bbefa13ca89db5a307648a87b0ce406cc45be9f98d89871742cdeb0",
      "kind": "transparent"
    },
    {
      "address": "0xce3Adab302f2a5DB1Cb37fAB8e7aeEE2de589d82",
      "txHash": "0x74d50d70f52466a7ba8545ec780815f063f425cabc3935111ccd353700de5f6c",
      "kind": "transparent"
    },
    {
      "address": "0x96Ebd195d703b874e606F6225B89738886282e7F",
      "txHash": "0xe924b3f0db0bc6740573b9e2d8b4707da65dd1361c12a6afa6153940646ba56e",
      "kind": "transparent"
    },
    {
      "address": "0x16EE9AFEc5847802e8d40a43F7749A0e65327b6f",
      "txHash": "0xc42619197ea31be576cf19bb31529c3bc040c318579a6a19608328dc49787231",
      "kind": "transparent"
    },
    {
      "address": "0xAB8a2250a6246cB32C02E34e01745a68d3264195",
      "txHash": "0x692cf1e85856ebab39bbf4397f67e6da73a7b0fa7b6c1cf4d2c71e9de08f2fc3",
      "kind": "transparent"
    },
    {
      "address": "0xC88CAcA205Fb7CD2DA670DB8816B20E7f85c27fa",
      "txHash": "0x3683e9870799e24bd687df443c353ef19136d9da8682af1958f0ef72974d01f0",
      "kind": "transparent"
    },
    {
      "address": "0xeD7F21b152c7b0288d9ca2cc69aFb28Eef740298",
      "txHash": "0xa4f8f30c6d5e39eb1ac23c967d3d9373bc629db9916d2b4592f00722ed45e855",
      "kind": "transparent"
    },
    {
      "address": "0x71A6175a0431cCdFdb906dD91128e419Fe5E0Ea6",
      "txHash": "0x0afc9b581fd13d5476e041c35551470825a5e848ebfae12963ed5f2f82d60132",
      "kind": "transparent"
    },
    {
      "address": "0xdfa2Ed7E3D6077F78D93F55B03595273F9f14E0a",
      "txHash": "0x887e2bacd69a04ffd0e5bc49e3306e0dc71a82d1d5f7074d7ca3191c747d32c8",
      "kind": "transparent"
    },
    {
      "address": "0x141592227532FD2027b15cf6B282c89F0b4EE398",
      "txHash": "0x23b48607cd9c512b9d64a08958c3530beb011c2d52468ef70505627b6ab9b52d",
      "kind": "transparent"
    },
    {
      "address": "0x98D3f5Cc0245AcDf5Eb95d873C185E3aee3C977C",
      "txHash": "0x49127df23f31ad21d479d56cfe2fff0a61b778c3775bcce8147670b0bfdd1660",
      "kind": "transparent"
    },
    {
      "address": "0xB2f853B50155120F6cd62Efe61D84EdA4b310fe6",
      "txHash": "0xa3f0961e5daddd4ff0f06f99b4677d0b9a79ae343403550881d105173efaa9b8",
      "kind": "transparent"
    },
    {
      "address": "0xbb4Bd284eE0C5075D97403e2e4b377b39E5BD324",
      "txHash": "0x1e589fadabf0d49fd25b1b4ea8d9a8b57d9144730aae111924757da8d766ff51",
      "kind": "transparent"
    },
    {
      "address": "0x8B911793e629f3Be250e30B702865F035D501F1a",
      "txHash": "0xbf63f286890487f9d98297a97d476b96c75b5ff039a5aff8e30132ea650e5ea1",
      "kind": "transparent"
    },
    {
      "address": "0xe1c549d0F36826156043BbB029f1CAEFA90a42E7",
      "txHash": "0x4899c99c7ae6c2936a4ac57c509207e8c0a52025a12a51bd9264e8feff6883c1",
      "kind": "transparent"
    },
    {
      "address": "0xE6BF39e03fD76DeC43938add2B7D44F13D6fF9B4",
      "txHash": "0x9397d1fb51a4beee9b772f4d20dd79df2e469230ec5bf0e2da5bbfb885cc6765",
      "kind": "transparent"
    },
    {
      "address": "0x31D157Ad5DC7003F321895039DDe1b1C454aa73b",
      "txHash": "0x5f03c295d32d865b6e0d5c1ad23799ad8aaf685250c684b1d5adf9806a5ab43c",
      "kind": "transparent"
    },
    {
      "address": "0x9497a6dca9083A1884eAdbF308ed2Fd1A8da6aC7",
      "txHash": "0xfe1633d962197cf07949bb00ab75aad997898509dbdc18ce0098ddbf6eca2690",
      "kind": "transparent"
    },
    {
      "address": "0x06dbbD84EE63Bc660b5EEd07b05cdD4c62B5D0E7",
      "txHash": "0x3ffff752bfa7e9b185ba15339c3d3c022b86d47936d38bcfadd7b344b6dc3e75",
      "kind": "transparent"
    },
    {
      "address": "0x3d9D3C100311f8a07E388b29360CbC17D8b7FdCa",
      "txHash": "0xb7e13e79874d24a199f881815c30094c554525b00cc05ab9d1a6fbd19d8b1fe5",
      "kind": "transparent"
    },
    {
      "address": "0x9E1142ccA96B9C7d3b9f714B2670271CFb47D544",
      "txHash": "0x7e9a5bd061784a8d3be11aae0f36b8fc9f07ea489f702afe75325271a35db3f4",
      "kind": "transparent"
    },
    {
      "address": "0x9dB755aCcFC54711195771a1133bf991e9cf4264",
      "txHash": "0x6ea61a83464a9d2846aa359dc193aa7faf93df3a3df8b7b1c2c9e909eefbe81e",
      "kind": "transparent"
    },
    {
      "address": "0x274C5303b5682b4401Bb4664e270A3E2Ed059395",
      "txHash": "0xa8cdbad7562cdd391ca0de92dc3d14406fc81dfe209346cd831c44d059396c84",
      "kind": "transparent"
    },
    {
      "address": "0xe9ac79c5d8078f7b5417079066F2c1a9daFD4B7A",
      "txHash": "0x92dfa88deb2d9db4e7a40675cbc6d1c80ce12c4a64cca0d47a5ca6ef384d772b",
      "kind": "transparent"
    },
    {
      "address": "0x2368B2041Ca62f295b7CcdE6039634f3ba6227F7",
      "txHash": "0x98e635f4c11a4207962b9b1b8b581099713e8a8340a9dd579a2dc816bef8ab96",
      "kind": "transparent"
    },
    {
      "address": "0xa86601D61b75c06f61E9DaD733562Eb335Fe1d86",
      "txHash": "0x61bf442f6de69b4c292eb036974c06bfadac3d11a21ea352daca6cb5c5668821",
      "kind": "transparent"
    },
    {
      "address": "0x608Ea0399886baFA4F6F01b5ceb8900EfC56a879",
      "txHash": "0xf5447ee8b46b0bf593dd17074e27466b449bf47d6c6b85e0d3deaad8ba15b664",
      "kind": "transparent"
    },
    {
      "address": "0x94B5772F15382E48E5Eab5E3c213A94aE4e56987",
      "txHash": "0xd653813e3fc75183a143bb8887fd53585503cc323ddc84a47e1edc303be480f6",
      "kind": "transparent"
    },
    {
      "address": "0xA03212Eae2F4Bc4c5d970fe2e95E986c510b607A",
      "txHash": "0x811b26311e09526ac3a80405faa9db069ddf5d6dec1cd9139873d4cc544e392b",
      "kind": "transparent"
    },
    {
      "address": "0x2E1633826DDFb66b8B98D32947e1169d1a236b3c",
      "txHash": "0xc3d4c421975cb9cf86b412e4be5a7745fa5d168588861b60b7c97cff71476c46",
      "kind": "transparent"
    },
    {
      "address": "0x34Eeb4AE346693103cEEA7F8fA10C5bE04a8f2c6",
      "txHash": "0xb217c49891487144918c1a30e0e015a9e021d88709789b714165d2fc50034d7d",
      "kind": "transparent"
    },
    {
      "address": "0x7428494bA9595528aA9d3C161d6CEE0b54D00fF1",
      "txHash": "0xd4a4b479a9b9744816f84ab410c79386ab1e3e56e707602742548f8b7e2b10ad",
      "kind": "transparent"
    },
    {
      "address": "0x5B2053B699053981100B08737b42912f80083E42",
      "txHash": "0x9d8d2a17bb95a23a4462ea9a3540b3f1196b92bf2e6ffe522b7fd7670d7c6457",
      "kind": "transparent"
    },
    {
      "address": "0x704DFfa52cA8fc5a3c6906c4DB8B98A4b21112f0",
      "txHash": "0xb3e3d20a1bb3ca1be58b41e894e0e78826c04b12fb3ef9d15ebeb8dd07cf657d",
      "kind": "transparent"
    },
    {
      "address": "0x3fF6671105BB0022CF445042F14EdF70fbACfe34",
      "txHash": "0x81b9f428ea7f135acb97a2fac34543ec6f347709ed7ec38639a5cebc34bd40f2",
      "kind": "transparent"
    },
    {
      "address": "0x86AB77BA49E6C40F39807579088822c611394064",
      "txHash": "0x4222b85108664e3716105117ce44ca8ed57dfd1eb8ce0155724a76d48f32d4ce",
      "kind": "transparent"
    },
    {
      "address": "0xa44e403EF900600F560eb035f310989ab709B31E",
      "txHash": "0x854a1539d71a397456d7d4fcd593af829a2bac5a8c834365cc5544c2f0db5cbb",
      "kind": "transparent"
    },
    {
      "address": "0x6022443534A789f0b2bFb0B16f961594867DFf72",
      "txHash": "0x2a864100f50734068d11c26147d6c551c1a89aa80d8ebd022c9f4feca860a9ea",
      "kind": "transparent"
    },
    {
      "address": "0x7981ee6C7f6eab12DCfa0b0482a753BD8d7c0398",
      "txHash": "0xec904ce0798e2a9cf0739d77892e0cd20594dea18a156098b976451ccd99de76",
      "kind": "transparent"
    },
    {
      "address": "0x554Cc51f0f4b2CB3842e589216e58FC3e7F90423",
      "txHash": "0xc563ab2a42208a32d133bec8482ec54c473b211a8d06f96e502b6c047c1ecbbe",
      "kind": "transparent"
    },
    {
      "address": "0xA4C465A988Ae5EF479Ea89B605e880EfC3F05bAe",
      "txHash": "0x97249ee68f9ee2ae1c85cce2b704bbaa6c5debd1a87b26dc339a847312beea49",
      "kind": "transparent"
    },
    {
      "address": "0xDE2888e13508dfc220D92A7A05f457c80Dc80171",
      "txHash": "0x198a339afc74332bd9eaa6703fadaa5e4bfb88bc9939e7488d219933a0958d3e",
      "kind": "transparent"
    },
    {
      "address": "0x840d5aB65Fc56B1D4d43b06bFd1d236B8e365358",
      "txHash": "0x7e279fbfd02e3ffb4fbb46c16c452d07dfa04a99266b710b949d2c07e4ea17a2",
      "kind": "transparent"
    },
    {
      "address": "0x75087ade41b9DD506FaEe9976BB06B1b465CF4Fc",
      "txHash": "0xf660a742691a4ebb58f2c5c7a98f4953c2411053d463db0f6d204414e775c398",
      "kind": "transparent"
    },
    {
      "address": "0x9632f728baAa34270e1cB93187FdbA138aFE727C",
      "txHash": "0x4a34b3df589e20b9fbe6953093ee3309490bfde4fdf2439ddc3fc8a2c0e2377c",
      "kind": "transparent"
    },
    {
      "address": "0x7c676073854fB01a960a4AD8F72321C63F496353",
      "txHash": "0xc84f5721b1fff23984475fc3ff14ffed76bacb6e60545960bef4c71d55b092f7",
      "kind": "transparent"
    },
    {
      "address": "0x380BD3bd50BA2214Fa298C2bb6502303d7462C35",
      "txHash": "0xd6e3299ec9b0237390864f1ec5c83640c5a80ef753a2700ce846c3bab9dcc705",
      "kind": "transparent"
    },
    {
      "address": "0x6d444c9A201e37c537a8f308F650b4d698e18faF",
      "txHash": "0x123356c1cce502ad4ec962bd8ab60ee164018f5afced647cced3f77e962866f6",
      "kind": "transparent"
    },
    {
      "address": "0xc2d48ae09191428b41073e5c3aB36c53137E2351",
      "txHash": "0x06f21a66c2bec1b397418608355153b42b3c22d96eefee829e53d91a0477d885",
      "kind": "transparent"
    },
    {
      "address": "0xd167465B73C76622f9A9b88b44C28f9EA12F90D0",
      "txHash": "0xf557e90b60d6b4041f23ab1ce74435be38626a588ea3f78542fc0e839297d79e",
      "kind": "transparent"
    },
    {
      "address": "0xf50aA5B9f6173B85B641b420B6401C381bA330AF",
      "txHash": "0xf47c157c9f959dcd11bc8d698c0bea8a815a33859cf827cfd142f9bebfb850a5",
      "kind": "transparent"
    },
    {
      "address": "0x14f0e8ab6227E15aE5f2DF7d8F5fAC07a17EDbd0",
      "txHash": "0x65e41d189d18bd10b473209cdfedc1b328dba4927f5fd5d1bf49f84ef0d0ce6c",
      "kind": "transparent"
    },
    {
      "address": "0x43ad0C45763548f1Ec79d37BC5eDd21144085C6a",
      "txHash": "0x9455efe8fc3f0f88b9cff12feab3c828f47a3b66dbd24ddf08ce0f50d8293332",
      "kind": "transparent"
    },
    {
      "address": "0x66edd2E43A182F157a84a2c7745C27656Bc5DfD3",
      "txHash": "0x90f105d5a9881e195d5a586327ec1e380f9285a701ced9064cac1416ab5e4b8f",
      "kind": "transparent"
    }
  ],
  "impls": {
    "6f6552be2067f6239322f524f079c940e00decc055866adabb183820be2d4434": {
      "address": "0x96A56A081269fEBb7Ce5D50dB6Ae7516bA25A065",
      "txHash": "0xcf93f3838a0dfb3371c5ad19c72d9c4746b87388e11d1af5e4fe8cbedff61559",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
          },
          {
            "label": "minter",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "Jungle",
            "src": "contracts/Jungle.sol:7"
          },
          {
            "label": "migrator",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "Jungle",
            "src": "contracts/Jungle.sol:8"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "3c2fe5599e3505e518f4c4e8448ccb51138daf2b874cfb7053e6cf24ebbbb5b3": {
      "address": "0xd4d69Bc06F319E9903eceE28aa4fe61e2244704F",
      "txHash": "0x11c72095c16055382626f99ec4bf8e31935cb848d0abea3c54a6a81884a5fe24",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_decimals",
            "offset": 0,
            "slot": "101",
            "type": "t_uint8",
            "contract": "ERC20Mintable",
            "src": "contracts/ERC20Mintable.sol:7"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "0fa61c8a5903c494bbfd8104d094f7be314bbf33a7d9b9a2b664da75dca07457": {
      "address": "0x3d43E6533FB48195fE96a9353Ee7a896601a8A0D",
      "txHash": "0xaec98f4aaec9c80c0ff17374bc770a36d6d93dc9df59e991cb71ffccdcd50250",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "5bf69057c19b89c5e69dfe8d557e4e329ac462f30de38d21a2e2fd5803b2b7f9": {
      "address": "0x67c3Fb6C6a07c99f96658e8Dd9f22fa250a1ED61",
      "txHash": "0x9cc542b03cbcd64cd57c7f0cbdf761a0040c068ca09f2230d7d8c26c82c2115a",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "token",
            "offset": 2,
            "slot": "0",
            "type": "t_address",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:72"
          },
          {
            "label": "voter",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:73"
          },
          {
            "label": "team",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:74"
          },
          {
            "label": "artProxy",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:75"
          },
          {
            "label": "api",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:76"
          },
          {
            "label": "_point_history",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_struct(Point)11000_storage)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:78"
          },
          {
            "label": "supportedInterfaces",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:81"
          },
          {
            "label": "tokenId",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:93"
          },
          {
            "label": "_entered_state",
            "offset": 0,
            "slot": "8",
            "type": "t_uint8",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:122"
          },
          {
            "label": "idToOwner",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:176"
          },
          {
            "label": "ownerToNFTokenCount",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:179"
          },
          {
            "label": "idToApprovals",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:206"
          },
          {
            "label": "ownerToOperators",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:209"
          },
          {
            "label": "ownership_change",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:211"
          },
          {
            "label": "ownerToNFTokenIdList",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:442"
          },
          {
            "label": "tokenToOwnerIndex",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:446"
          },
          {
            "label": "user_point_epoch",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:566"
          },
          {
            "label": "_user_point_history",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_uint256,t_array(t_struct(Point)11000_storage)1000000000_storage)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:567"
          },
          {
            "label": "_locked",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_uint256,t_struct(LockedBalance)11005_storage)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:568"
          },
          {
            "label": "epoch",
            "offset": 0,
            "slot": "19",
            "type": "t_uint256",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:569"
          },
          {
            "label": "slope_changes",
            "offset": 0,
            "slot": "20",
            "type": "t_mapping(t_uint256,t_int128)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:570"
          },
          {
            "label": "supply",
            "offset": 0,
            "slot": "21",
            "type": "t_uint256",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:571"
          },
          {
            "label": "voted",
            "offset": 0,
            "slot": "22",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:1255"
          },
          {
            "label": "_delegates",
            "offset": 0,
            "slot": "23",
            "type": "t_mapping(t_address,t_address)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:1388"
          },
          {
            "label": "checkpoints",
            "offset": 0,
            "slot": "24",
            "type": "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)5783_storage))",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:1392"
          },
          {
            "label": "numCheckpoints",
            "offset": 0,
            "slot": "25",
            "type": "t_mapping(t_address,t_uint32)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:1395"
          },
          {
            "label": "nonces",
            "offset": 0,
            "slot": "26",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:1398"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Point)11000_storage)1000000000_storage": {
            "label": "struct IVotingEscrow.Point[1000000000]",
            "numberOfBytes": "96000000000"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_int128": {
            "label": "int128",
            "numberOfBytes": "16"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)5783_storage))": {
            "label": "mapping(address => mapping(uint32 => struct VotingEscrow.Checkpoint))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Point)11000_storage)1000000000_storage)": {
            "label": "mapping(uint256 => struct IVotingEscrow.Point[1000000000])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_int128)": {
            "label": "mapping(uint256 => int128)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LockedBalance)11005_storage)": {
            "label": "mapping(uint256 => struct IVotingEscrow.LockedBalance)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Point)11000_storage)": {
            "label": "mapping(uint256 => struct IVotingEscrow.Point)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_struct(Checkpoint)5783_storage)": {
            "label": "mapping(uint32 => struct VotingEscrow.Checkpoint)",
            "numberOfBytes": "32"
          },
          "t_struct(Checkpoint)5783_storage": {
            "label": "struct VotingEscrow.Checkpoint",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenIds",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(LockedBalance)11005_storage": {
            "label": "struct IVotingEscrow.LockedBalance",
            "members": [
              {
                "label": "amount",
                "type": "t_int128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "end",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Point)11000_storage": {
            "label": "struct IVotingEscrow.Point",
            "members": [
              {
                "label": "bias",
                "type": "t_int128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "slope",
                "type": "t_int128",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "ts",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "blk",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "4fd3b4c20f41c5b926a91f444c17bc6c6cae2aedc558b7cb095b7c4c1194ce3c": {
      "address": "0xeBf17cCc15E37Dd7e128e6C059f8fccDA2478050",
      "txHash": "0x1534791bd460086f83ec5a4b2e4f58046450eb9d7c958f0ea6701ef0fb74c148",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "start_time",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "RewardsDistributor",
            "src": "contracts/RewardsDistributor.sol:18"
          },
          {
            "label": "time_cursor",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "RewardsDistributor",
            "src": "contracts/RewardsDistributor.sol:19"
          },
          {
            "label": "time_cursor_of",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "RewardsDistributor",
            "src": "contracts/RewardsDistributor.sol:20"
          },
          {
            "label": "user_epoch_of",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "RewardsDistributor",
            "src": "contracts/RewardsDistributor.sol:21"
          },
          {
            "label": "last_token_time",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "RewardsDistributor",
            "src": "contracts/RewardsDistributor.sol:23"
          },
          {
            "label": "tokens_per_week",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_uint256)1000000000000000_storage",
            "contract": "RewardsDistributor",
            "src": "contracts/RewardsDistributor.sol:24"
          },
          {
            "label": "token_last_balance",
            "offset": 0,
            "slot": "1000000000000006",
            "type": "t_uint256",
            "contract": "RewardsDistributor",
            "src": "contracts/RewardsDistributor.sol:25"
          },
          {
            "label": "ve_supply",
            "offset": 0,
            "slot": "1000000000000007",
            "type": "t_array(t_uint256)1000000000000000_storage",
            "contract": "RewardsDistributor",
            "src": "contracts/RewardsDistributor.sol:26"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "2000000000000007",
            "type": "t_address",
            "contract": "RewardsDistributor",
            "src": "contracts/RewardsDistributor.sol:28"
          },
          {
            "label": "voting_escrow",
            "offset": 0,
            "slot": "2000000000000008",
            "type": "t_address",
            "contract": "RewardsDistributor",
            "src": "contracts/RewardsDistributor.sol:29"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "2000000000000009",
            "type": "t_address",
            "contract": "RewardsDistributor",
            "src": "contracts/RewardsDistributor.sol:30"
          },
          {
            "label": "depositor",
            "offset": 0,
            "slot": "2000000000000010",
            "type": "t_address",
            "contract": "RewardsDistributor",
            "src": "contracts/RewardsDistributor.sol:31"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)1000000000000000_storage": {
            "label": "uint256[1000000000000000]",
            "numberOfBytes": "32000000000000000"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "57521cd678dd654977319a040d6b2b127900999d8a79dc3fc55485197bde7311": {
      "address": "0x66F35d25E5b13a97f042f4393C6adA4c4b56b719",
      "txHash": "0x712de68aaa0005687188641dafa698efcab3c736bdc3fe4337c01fc579582511",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "pairImplementation",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PairFactory",
            "src": "contracts/factories/PairFactory.sol:19"
          },
          {
            "label": "stableFee",
            "offset": 0,
            "slot": "152",
            "type": "t_uint256",
            "contract": "PairFactory",
            "src": "contracts/factories/PairFactory.sol:21"
          },
          {
            "label": "volatileFee",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "PairFactory",
            "src": "contracts/factories/PairFactory.sol:22"
          },
          {
            "label": "feeManager",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "PairFactory",
            "src": "contracts/factories/PairFactory.sol:24"
          },
          {
            "label": "pendingFeeManager",
            "offset": 0,
            "slot": "155",
            "type": "t_address",
            "contract": "PairFactory",
            "src": "contracts/factories/PairFactory.sol:25"
          },
          {
            "label": "pairManager",
            "offset": 0,
            "slot": "156",
            "type": "t_address",
            "contract": "PairFactory",
            "src": "contracts/factories/PairFactory.sol:26"
          },
          {
            "label": "getPair",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_bool,t_address)))",
            "contract": "PairFactory",
            "src": "contracts/factories/PairFactory.sol:28"
          },
          {
            "label": "isPair",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "PairFactory",
            "src": "contracts/factories/PairFactory.sol:30"
          },
          {
            "label": "_privileged",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "PairFactory",
            "src": "contracts/factories/PairFactory.sol:31"
          },
          {
            "label": "allPairs",
            "offset": 0,
            "slot": "160",
            "type": "t_array(t_address)dyn_storage",
            "contract": "PairFactory",
            "src": "contracts/factories/PairFactory.sol:33"
          },
          {
            "label": "whitelistedAMO",
            "offset": 0,
            "slot": "161",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "PairFactory",
            "src": "contracts/factories/PairFactory.sol:35"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_bool,t_address)))": {
            "label": "mapping(address => mapping(address => mapping(bool => address)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bool,t_address))": {
            "label": "mapping(address => mapping(bool => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bool,t_address)": {
            "label": "mapping(bool => address)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "5cdfd74b9747a22b4a75fcfd48497f240e07d96587831cc88f168259d84d05d1": {
      "address": "0xBF11b597309F93466715F37e01036Be20E89CCCd",
      "txHash": "0x330a1830db95eff579464a4431d74de8ee74e14cc16216e24848e87b7f77bdec",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "MulticallUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/MulticallUpgradeable.sol:51"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "factory",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IPairFactory)35854",
            "contract": "SingleTokenLiquidityProvider",
            "src": "contracts/SingleTokenLiquidityProvider.sol:22"
          },
          {
            "label": "requiresWhitelisting",
            "offset": 20,
            "slot": "151",
            "type": "t_bool",
            "contract": "SingleTokenLiquidityProvider",
            "src": "contracts/SingleTokenLiquidityProvider.sol:25"
          },
          {
            "label": "maxSwapRatio",
            "offset": 0,
            "slot": "152",
            "type": "t_uint256",
            "contract": "SingleTokenLiquidityProvider",
            "src": "contracts/SingleTokenLiquidityProvider.sol:28"
          },
          {
            "label": "isWhitelisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "SingleTokenLiquidityProvider",
            "src": "contracts/SingleTokenLiquidityProvider.sol:31"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IPairFactory)35854": {
            "label": "contract IPairFactory",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "1a6a226bfc0c42580c13d499334f683284cb835e5a6384f28803f926189f4358": {
      "address": "0xA7e5430bdfD459E054e0ac80AD9ccf72FA9bCF5D",
      "txHash": "0x7837ae9052e9ca34df6748511cb2b6adceb8c817372a1c915fbf57935af1b88f",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "last_gauge",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "GaugeFactory",
            "src": "contracts/factories/GaugeFactory.sol:11"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "01ef93d4a9c3dbb2e06c1021bca8ff71570d18768fb8a32ccfb1d83fc6bc0144": {
      "address": "0xA4e92B906d2919DfCfDB73A86a14664fdE46A743",
      "txHash": "0x5ebabe8cd4e06f2118c933e9d0a3e658e2163e96c21b648cb636cddee828038d",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "last_bribe",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "BribeFactory",
            "src": "contracts/factories/BribeFactory.sol:12"
          },
          {
            "label": "_bribes",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_address)dyn_storage",
            "contract": "BribeFactory",
            "src": "contracts/factories/BribeFactory.sol:13"
          },
          {
            "label": "voter",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "BribeFactory",
            "src": "contracts/factories/BribeFactory.sol:14"
          },
          {
            "label": "defaultRewardToken",
            "offset": 0,
            "slot": "154",
            "type": "t_array(t_address)dyn_storage",
            "contract": "BribeFactory",
            "src": "contracts/factories/BribeFactory.sol:16"
          },
          {
            "label": "isDefaultRewardToken",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BribeFactory",
            "src": "contracts/factories/BribeFactory.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "09ff12e1548d3e41a557bc4d8bc16676ca0e158eaeaa155ae4753921cd919972": {
      "address": "0xF100A0D8C4E8FD587DD36827184F73b3dC9B3bDd",
      "txHash": "0x0f35fc2b7d0a60a64f71639a4464d3e6a9e1078164bbb411eb4c0a66103b0990",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "_ve",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "Voter",
            "src": "contracts/Voter.sol:19"
          },
          {
            "label": "factory",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "Voter",
            "src": "contracts/Voter.sol:20"
          },
          {
            "label": "base",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "Voter",
            "src": "contracts/Voter.sol:21"
          },
          {
            "label": "gaugefactory",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "Voter",
            "src": "contracts/Voter.sol:22"
          },
          {
            "label": "bribefactory",
            "offset": 0,
            "slot": "155",
            "type": "t_address",
            "contract": "Voter",
            "src": "contracts/Voter.sol:23"
          },
          {
            "label": "minter",
            "offset": 0,
            "slot": "156",
            "type": "t_address",
            "contract": "Voter",
            "src": "contracts/Voter.sol:24"
          },
          {
            "label": "governor",
            "offset": 0,
            "slot": "157",
            "type": "t_address",
            "contract": "Voter",
            "src": "contracts/Voter.sol:25"
          },
          {
            "label": "emergencyCouncil",
            "offset": 0,
            "slot": "158",
            "type": "t_address",
            "contract": "Voter",
            "src": "contracts/Voter.sol:26"
          },
          {
            "label": "index",
            "offset": 0,
            "slot": "159",
            "type": "t_uint256",
            "contract": "Voter",
            "src": "contracts/Voter.sol:28"
          },
          {
            "label": "supplyIndex",
            "offset": 0,
            "slot": "160",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Voter",
            "src": "contracts/Voter.sol:29"
          },
          {
            "label": "claimable",
            "offset": 0,
            "slot": "161",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Voter",
            "src": "contracts/Voter.sol:30"
          },
          {
            "label": "totalWeight",
            "offset": 0,
            "slot": "162",
            "type": "t_uint256",
            "contract": "Voter",
            "src": "contracts/Voter.sol:32"
          },
          {
            "label": "pools",
            "offset": 0,
            "slot": "163",
            "type": "t_array(t_address)dyn_storage",
            "contract": "Voter",
            "src": "contracts/Voter.sol:34"
          },
          {
            "label": "gauges",
            "offset": 0,
            "slot": "164",
            "type": "t_mapping(t_address,t_address)",
            "contract": "Voter",
            "src": "contracts/Voter.sol:35"
          },
          {
            "label": "gaugesDistributionTimestamp",
            "offset": 0,
            "slot": "165",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Voter",
            "src": "contracts/Voter.sol:36"
          },
          {
            "label": "poolForGauge",
            "offset": 0,
            "slot": "166",
            "type": "t_mapping(t_address,t_address)",
            "contract": "Voter",
            "src": "contracts/Voter.sol:37"
          },
          {
            "label": "internal_bribes",
            "offset": 0,
            "slot": "167",
            "type": "t_mapping(t_address,t_address)",
            "contract": "Voter",
            "src": "contracts/Voter.sol:38"
          },
          {
            "label": "external_bribes",
            "offset": 0,
            "slot": "168",
            "type": "t_mapping(t_address,t_address)",
            "contract": "Voter",
            "src": "contracts/Voter.sol:39"
          },
          {
            "label": "weights",
            "offset": 0,
            "slot": "169",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Voter",
            "src": "contracts/Voter.sol:40"
          },
          {
            "label": "votes",
            "offset": 0,
            "slot": "170",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "Voter",
            "src": "contracts/Voter.sol:41"
          },
          {
            "label": "poolVote",
            "offset": 0,
            "slot": "171",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "Voter",
            "src": "contracts/Voter.sol:42"
          },
          {
            "label": "usedWeights",
            "offset": 0,
            "slot": "172",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Voter",
            "src": "contracts/Voter.sol:43"
          },
          {
            "label": "lastVoted",
            "offset": 0,
            "slot": "173",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Voter",
            "src": "contracts/Voter.sol:44"
          },
          {
            "label": "isGauge",
            "offset": 0,
            "slot": "174",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Voter",
            "src": "contracts/Voter.sol:45"
          },
          {
            "label": "isWhitelisted",
            "offset": 0,
            "slot": "175",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Voter",
            "src": "contracts/Voter.sol:46"
          },
          {
            "label": "isAlive",
            "offset": 0,
            "slot": "176",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Voter",
            "src": "contracts/Voter.sol:47"
          },
          {
            "label": "zusd",
            "offset": 0,
            "slot": "177",
            "type": "t_address",
            "contract": "Voter",
            "src": "contracts/Voter.sol:49"
          },
          {
            "label": "isBribe",
            "offset": 0,
            "slot": "178",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Voter",
            "src": "contracts/Voter.sol:51"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "0ee326b2490d66c5b940cd176d88fec8c08a2834705784e6aea97cd9fb3b74e3": {
      "address": "0xFED1a78B41c15659B5474EA7AbBABC3688197e2e",
      "txHash": "0x805d52231e12fc4734c24e61f70b2441d9e924c942a2f5f2c4e23e5fb2360d4c",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "isFirstMint",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "Minter",
            "src": "contracts/Minter.sol:20"
          },
          {
            "label": "EMISSION",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "Minter",
            "src": "contracts/Minter.sol:22"
          },
          {
            "label": "TAIL_EMISSION",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "Minter",
            "src": "contracts/Minter.sol:23"
          },
          {
            "label": "REBASEMAX",
            "offset": 0,
            "slot": "104",
            "type": "t_uint256",
            "contract": "Minter",
            "src": "contracts/Minter.sol:24"
          },
          {
            "label": "REBASESLOPE",
            "offset": 0,
            "slot": "105",
            "type": "t_uint256",
            "contract": "Minter",
            "src": "contracts/Minter.sol:25"
          },
          {
            "label": "teamRate",
            "offset": 0,
            "slot": "106",
            "type": "t_uint256",
            "contract": "Minter",
            "src": "contracts/Minter.sol:26"
          },
          {
            "label": "weekly",
            "offset": 0,
            "slot": "107",
            "type": "t_uint256",
            "contract": "Minter",
            "src": "contracts/Minter.sol:28"
          },
          {
            "label": "active_period",
            "offset": 0,
            "slot": "108",
            "type": "t_uint256",
            "contract": "Minter",
            "src": "contracts/Minter.sol:29"
          },
          {
            "label": "_initializer",
            "offset": 0,
            "slot": "109",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts/Minter.sol:31"
          },
          {
            "label": "team",
            "offset": 0,
            "slot": "110",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts/Minter.sol:32"
          },
          {
            "label": "pendingTeam",
            "offset": 0,
            "slot": "111",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts/Minter.sol:33"
          },
          {
            "label": "_jungle",
            "offset": 0,
            "slot": "112",
            "type": "t_contract(IJungle)35560",
            "contract": "Minter",
            "src": "contracts/Minter.sol:35"
          },
          {
            "label": "_voter",
            "offset": 0,
            "slot": "113",
            "type": "t_contract(IVoter)36088",
            "contract": "Minter",
            "src": "contracts/Minter.sol:36"
          },
          {
            "label": "_ve",
            "offset": 0,
            "slot": "114",
            "type": "t_contract(IVotingEscrow)36266",
            "contract": "Minter",
            "src": "contracts/Minter.sol:37"
          },
          {
            "label": "_rewards_distributor",
            "offset": 0,
            "slot": "115",
            "type": "t_contract(IRewardsDistributor)35891",
            "contract": "Minter",
            "src": "contracts/Minter.sol:38"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IJungle)35560": {
            "label": "contract IJungle",
            "numberOfBytes": "20"
          },
          "t_contract(IRewardsDistributor)35891": {
            "label": "contract IRewardsDistributor",
            "numberOfBytes": "20"
          },
          "t_contract(IVoter)36088": {
            "label": "contract IVoter",
            "numberOfBytes": "20"
          },
          "t_contract(IVotingEscrow)36266": {
            "label": "contract IVotingEscrow",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "c3553e13a05bf25c4e861e9c25629ad079884de8dd3e504675d0ef69f40809c6": {
      "address": "0x998FDdeF8b2DB1F46b5c13e3e8Df513c0Fff0E1C",
      "txHash": "0x85899582a68efa5e3d0545504d7fdaa0784180290108b5621f94432fc565b6c2",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "pairFactory",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(IPairFactory)35854",
            "contract": "PairAPI",
            "src": "contracts/APIHelper/PairAPI.sol:69"
          },
          {
            "label": "voter",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IVoter)36088",
            "contract": "PairAPI",
            "src": "contracts/APIHelper/PairAPI.sol:70"
          },
          {
            "label": "underlyingToken",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "PairAPI",
            "src": "contracts/APIHelper/PairAPI.sol:72"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "PairAPI",
            "src": "contracts/APIHelper/PairAPI.sol:74"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IPairFactory)35854": {
            "label": "contract IPairFactory",
            "numberOfBytes": "20"
          },
          "t_contract(IVoter)36088": {
            "label": "contract IVoter",
            "numberOfBytes": "20"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "1ff8011d78fc8b76af3187ecb667421e4e696608a21c3112bd18b6023126a4e7": {
      "address": "0xAe56a794C838dCdE2CF58D9b8DAeE18cB8bd2BCd",
      "txHash": "0x7e9e971fc0f5ad01c28b1f19b69eff35dba93dff71e25b14a01147a0a1d03fa7",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "pairFactory",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(IPairFactory)34803",
            "contract": "RewardAPI",
            "src": "contracts/APIHelper/RewardAPI.sol:13"
          },
          {
            "label": "voter",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IVoter)35037",
            "contract": "RewardAPI",
            "src": "contracts/APIHelper/RewardAPI.sol:14"
          },
          {
            "label": "underlyingToken",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "RewardAPI",
            "src": "contracts/APIHelper/RewardAPI.sol:15"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "RewardAPI",
            "src": "contracts/APIHelper/RewardAPI.sol:16"
          },
          {
            "label": "notReward",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "RewardAPI",
            "src": "contracts/APIHelper/RewardAPI.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IPairFactory)34803": {
            "label": "contract IPairFactory",
            "numberOfBytes": "20"
          },
          "t_contract(IVoter)35037": {
            "label": "contract IVoter",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "e691c225f6a1bb7ecb3300c6a597d935574f137f98aa7c174071dc48f75ab2c0": {
      "address": "0x0B8DF5092a7ABae4362B936D889DdDE415406fbB",
      "txHash": "0xabf08d26f57712bfaccb25a40461ac2f5f70f33e66a71105e063113df16f4c44",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "voter",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(IVoter)36088",
            "contract": "veNFTAPI",
            "src": "contracts/APIHelper/veNFTAPI.sol:91"
          },
          {
            "label": "underlyingToken",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "veNFTAPI",
            "src": "contracts/APIHelper/veNFTAPI.sol:92"
          },
          {
            "label": "notReward",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "veNFTAPI",
            "src": "contracts/APIHelper/veNFTAPI.sol:94"
          },
          {
            "label": "ve",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(IVotingEscrow)36266",
            "contract": "veNFTAPI",
            "src": "contracts/APIHelper/veNFTAPI.sol:96"
          },
          {
            "label": "rewardDistributor",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(IRewardsDistributor)35891",
            "contract": "veNFTAPI",
            "src": "contracts/APIHelper/veNFTAPI.sol:97"
          },
          {
            "label": "pairAPI",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "veNFTAPI",
            "src": "contracts/APIHelper/veNFTAPI.sol:99"
          },
          {
            "label": "pairFactory",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(IPairFactory)35854",
            "contract": "veNFTAPI",
            "src": "contracts/APIHelper/veNFTAPI.sol:100"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "7",
            "type": "t_address",
            "contract": "veNFTAPI",
            "src": "contracts/APIHelper/veNFTAPI.sol:102"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IPairFactory)35854": {
            "label": "contract IPairFactory",
            "numberOfBytes": "20"
          },
          "t_contract(IRewardsDistributor)35891": {
            "label": "contract IRewardsDistributor",
            "numberOfBytes": "20"
          },
          "t_contract(IVoter)36088": {
            "label": "contract IVoter",
            "numberOfBytes": "20"
          },
          "t_contract(IVotingEscrow)36266": {
            "label": "contract IVotingEscrow",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "520a7df77f33fe6fa9a36b203f9d1ef3e333da449a9fca62be32268b204873fb": {
      "address": "0x87c4C5987c72b66AcB9366513C370AF10896f038",
      "txHash": "0xb38ace50361408e1e8ac0cbd668927181b645348b7209aa1876621d95e0f1deb",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "minter",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IMinter)34447",
            "contract": "EpochController",
            "src": "contracts/automation/EpochController.sol:11"
          },
          {
            "label": "voter",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(IVoter)34944",
            "contract": "EpochController",
            "src": "contracts/automation/EpochController.sol:12"
          },
          {
            "label": "batchSize",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "EpochController",
            "src": "contracts/automation/EpochController.sol:13"
          },
          {
            "label": "_lastProcessed",
            "offset": 0,
            "slot": "104",
            "type": "t_uint256",
            "contract": "EpochController",
            "src": "contracts/automation/EpochController.sol:15"
          },
          {
            "label": "_isDistributing",
            "offset": 0,
            "slot": "105",
            "type": "t_bool",
            "contract": "EpochController",
            "src": "contracts/automation/EpochController.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IMinter)34447": {
            "label": "contract IMinter",
            "numberOfBytes": "20"
          },
          "t_contract(IVoter)34944": {
            "label": "contract IVoter",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "49876d9aa2c3cd4fea7e34e7c9d020c71b3bc107939f63c81aafc90b759738bd": {
      "address": "0xf23f4Df2D42f16A41FEba72B8c6d17e0A657c93c",
      "txHash": "0x3a0c4902d910943771eac573915800f313833444c904982147c7e50034a52f3f",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "pairFactory",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IPairFactory)35854",
            "contract": "FeeDistributor",
            "src": "contracts/automation/FeeDistributor.sol:12"
          },
          {
            "label": "voter",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(IVoter)36088",
            "contract": "FeeDistributor",
            "src": "contracts/automation/FeeDistributor.sol:13"
          },
          {
            "label": "batchSize",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "FeeDistributor",
            "src": "contracts/automation/FeeDistributor.sol:14"
          },
          {
            "label": "interval",
            "offset": 0,
            "slot": "104",
            "type": "t_uint256",
            "contract": "FeeDistributor",
            "src": "contracts/automation/FeeDistributor.sol:15"
          },
          {
            "label": "intervalOffset",
            "offset": 0,
            "slot": "105",
            "type": "t_uint256",
            "contract": "FeeDistributor",
            "src": "contracts/automation/FeeDistributor.sol:16"
          },
          {
            "label": "_lastProcessed",
            "offset": 0,
            "slot": "106",
            "type": "t_uint256",
            "contract": "FeeDistributor",
            "src": "contracts/automation/FeeDistributor.sol:18"
          },
          {
            "label": "_isDistributing",
            "offset": 0,
            "slot": "107",
            "type": "t_bool",
            "contract": "FeeDistributor",
            "src": "contracts/automation/FeeDistributor.sol:19"
          },
          {
            "label": "_gauges",
            "offset": 0,
            "slot": "108",
            "type": "t_array(t_address)dyn_storage",
            "contract": "FeeDistributor",
            "src": "contracts/automation/FeeDistributor.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IPairFactory)35854": {
            "label": "contract IPairFactory",
            "numberOfBytes": "20"
          },
          "t_contract(IVoter)36088": {
            "label": "contract IVoter",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "69fe6a18a677392dc4c9da1acb4f6b0276a71fbf541a40c9086b01a80a0d2714": {
      "address": "0x23cc32a60f24D75b531a742C680D24bFC9292446",
      "txHash": "0x5471b48e4ef4d6609b3f3d084c6595f1dad6029c78c8b41b66e0012b0cfb107b",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "_ve",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "Voter",
            "src": "contracts/Voter.sol:19"
          },
          {
            "label": "factory",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "Voter",
            "src": "contracts/Voter.sol:20"
          },
          {
            "label": "base",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "Voter",
            "src": "contracts/Voter.sol:21"
          },
          {
            "label": "gaugefactory",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "Voter",
            "src": "contracts/Voter.sol:22"
          },
          {
            "label": "bribefactory",
            "offset": 0,
            "slot": "155",
            "type": "t_address",
            "contract": "Voter",
            "src": "contracts/Voter.sol:23"
          },
          {
            "label": "minter",
            "offset": 0,
            "slot": "156",
            "type": "t_address",
            "contract": "Voter",
            "src": "contracts/Voter.sol:24"
          },
          {
            "label": "governor",
            "offset": 0,
            "slot": "157",
            "type": "t_address",
            "contract": "Voter",
            "src": "contracts/Voter.sol:25"
          },
          {
            "label": "emergencyCouncil",
            "offset": 0,
            "slot": "158",
            "type": "t_address",
            "contract": "Voter",
            "src": "contracts/Voter.sol:26"
          },
          {
            "label": "index",
            "offset": 0,
            "slot": "159",
            "type": "t_uint256",
            "contract": "Voter",
            "src": "contracts/Voter.sol:28"
          },
          {
            "label": "supplyIndex",
            "offset": 0,
            "slot": "160",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Voter",
            "src": "contracts/Voter.sol:29"
          },
          {
            "label": "claimable",
            "offset": 0,
            "slot": "161",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Voter",
            "src": "contracts/Voter.sol:30"
          },
          {
            "label": "totalWeight",
            "offset": 0,
            "slot": "162",
            "type": "t_uint256",
            "contract": "Voter",
            "src": "contracts/Voter.sol:32"
          },
          {
            "label": "pools",
            "offset": 0,
            "slot": "163",
            "type": "t_array(t_address)dyn_storage",
            "contract": "Voter",
            "src": "contracts/Voter.sol:34"
          },
          {
            "label": "gauges",
            "offset": 0,
            "slot": "164",
            "type": "t_mapping(t_address,t_address)",
            "contract": "Voter",
            "src": "contracts/Voter.sol:35"
          },
          {
            "label": "gaugesDistributionTimestamp",
            "offset": 0,
            "slot": "165",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Voter",
            "src": "contracts/Voter.sol:36"
          },
          {
            "label": "poolForGauge",
            "offset": 0,
            "slot": "166",
            "type": "t_mapping(t_address,t_address)",
            "contract": "Voter",
            "src": "contracts/Voter.sol:37"
          },
          {
            "label": "internal_bribes",
            "offset": 0,
            "slot": "167",
            "type": "t_mapping(t_address,t_address)",
            "contract": "Voter",
            "src": "contracts/Voter.sol:38"
          },
          {
            "label": "external_bribes",
            "offset": 0,
            "slot": "168",
            "type": "t_mapping(t_address,t_address)",
            "contract": "Voter",
            "src": "contracts/Voter.sol:39"
          },
          {
            "label": "weights",
            "offset": 0,
            "slot": "169",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Voter",
            "src": "contracts/Voter.sol:40"
          },
          {
            "label": "votes",
            "offset": 0,
            "slot": "170",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "Voter",
            "src": "contracts/Voter.sol:41"
          },
          {
            "label": "poolVote",
            "offset": 0,
            "slot": "171",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "Voter",
            "src": "contracts/Voter.sol:42"
          },
          {
            "label": "usedWeights",
            "offset": 0,
            "slot": "172",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Voter",
            "src": "contracts/Voter.sol:43"
          },
          {
            "label": "lastVoted",
            "offset": 0,
            "slot": "173",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Voter",
            "src": "contracts/Voter.sol:44"
          },
          {
            "label": "isGauge",
            "offset": 0,
            "slot": "174",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Voter",
            "src": "contracts/Voter.sol:45"
          },
          {
            "label": "isWhitelisted",
            "offset": 0,
            "slot": "175",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Voter",
            "src": "contracts/Voter.sol:46"
          },
          {
            "label": "isAlive",
            "offset": 0,
            "slot": "176",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Voter",
            "src": "contracts/Voter.sol:47"
          },
          {
            "label": "zusd",
            "offset": 0,
            "slot": "177",
            "type": "t_address",
            "contract": "Voter",
            "src": "contracts/Voter.sol:49"
          },
          {
            "label": "isBribe",
            "offset": 0,
            "slot": "178",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Voter",
            "src": "contracts/Voter.sol:51"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "da57306dcbc6d349983dfc4e618a31958fffa13df3f8b9d0343bbb0a02af69eb": {
      "address": "0x9281cd4865a3940CC657c26986B69C664e2805ee",
      "txHash": "0xbe2fd9bf9e76f51103b2d24d4bfc3226b0cd6bea1d2405ad0fbddd0be845906f",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
          },
          {
            "label": "minter",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "DeJungle",
            "src": "contracts/DeJungle.sol:7"
          },
          {
            "label": "migrator",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "DeJungle",
            "src": "contracts/DeJungle.sol:8"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "153",
            "type": "t_string_storage",
            "contract": "DeJungle",
            "src": "contracts/DeJungle.sol:10"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "154",
            "type": "t_string_storage",
            "contract": "DeJungle",
            "src": "contracts/DeJungle.sol:11"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "ab216258aeb3f8b2acc00aabef4e7f61f64356a1a4b631cb9cda3f0c81d0965c": {
      "address": "0xbfE9580011e9CCF562444ec15eF3808a25d8e947",
      "txHash": "0x31862fa9b1792f5373a47f594d3adccee3fe6f8896f93daecc079860935bfe84",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
          },
          {
            "label": "minter",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "Jungl",
            "src": "contracts/Jungl.sol:7"
          },
          {
            "label": "migrator",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "Jungl",
            "src": "contracts/Jungl.sol:8"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "153",
            "type": "t_string_storage",
            "contract": "Jungl",
            "src": "contracts/Jungl.sol:10"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "154",
            "type": "t_string_storage",
            "contract": "Jungl",
            "src": "contracts/Jungl.sol:11"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "f2cff91f63c760a5fa687457c76bd64ae92fb32e52d6812a1e107db5ca098e15": {
      "address": "0x767bFF4791bA045b5182480c42a100E7Cb34F549",
      "txHash": "0xcde5cd990902690bf8f080865c572ce8b99de1f9085784ff698a5cdf0a652f82",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
          },
          {
            "label": "minter",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "Jungl",
            "src": "contracts/Jungl.sol:7"
          },
          {
            "label": "migrator",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "Jungl",
            "src": "contracts/Jungl.sol:8"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "153",
            "type": "t_string_storage",
            "contract": "Jungl",
            "src": "contracts/Jungl.sol:10"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "154",
            "type": "t_string_storage",
            "contract": "Jungl",
            "src": "contracts/Jungl.sol:11"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "ed8697322c9339691db935ce67530f3439aca1add5fd6ab785aba2a1409b9504": {
      "address": "0xca76468C27FF25A50EBb974612594438F7403a71",
      "txHash": "0xbd8ff78f3f4002815f82b1c00ca20e6ce22f55f6244bb01248271578b9a464a3",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "pairFactory",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(IPairFactory)34812",
            "contract": "RewardAPI",
            "src": "contracts/APIHelper/RewardAPI.sol:13"
          },
          {
            "label": "voter",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IVoter)35046",
            "contract": "RewardAPI",
            "src": "contracts/APIHelper/RewardAPI.sol:14"
          },
          {
            "label": "underlyingToken",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "RewardAPI",
            "src": "contracts/APIHelper/RewardAPI.sol:15"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "RewardAPI",
            "src": "contracts/APIHelper/RewardAPI.sol:16"
          },
          {
            "label": "notReward",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "RewardAPI",
            "src": "contracts/APIHelper/RewardAPI.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IPairFactory)34812": {
            "label": "contract IPairFactory",
            "numberOfBytes": "20"
          },
          "t_contract(IVoter)35046": {
            "label": "contract IVoter",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "b223dd9ecb30e7d4d96ca417929a99b4f28f25c0be9481a14d767c6bef49c64d": {
      "address": "0x31e2754904DCE6a196f869818aa474C04259AaC5",
      "txHash": "0xfd68a5433a1c8d2600d398915e976514193dabd07b85899196cf23a13d4bf738",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "token",
            "offset": 2,
            "slot": "0",
            "type": "t_address",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:72"
          },
          {
            "label": "voter",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:73"
          },
          {
            "label": "team",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:74"
          },
          {
            "label": "artProxy",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:75"
          },
          {
            "label": "api",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:76"
          },
          {
            "label": "_point_history",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_struct(Point)35051_storage)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:78"
          },
          {
            "label": "supportedInterfaces",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:81"
          },
          {
            "label": "tokenId",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:93"
          },
          {
            "label": "_entered_state",
            "offset": 0,
            "slot": "8",
            "type": "t_uint8",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:122"
          },
          {
            "label": "idToOwner",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:176"
          },
          {
            "label": "ownerToNFTokenCount",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:179"
          },
          {
            "label": "idToApprovals",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:206"
          },
          {
            "label": "ownerToOperators",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:209"
          },
          {
            "label": "ownership_change",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:211"
          },
          {
            "label": "ownerToNFTokenIdList",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:442"
          },
          {
            "label": "tokenToOwnerIndex",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:446"
          },
          {
            "label": "user_point_epoch",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:566"
          },
          {
            "label": "_user_point_history",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_uint256,t_array(t_struct(Point)35051_storage)1000000000_storage)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:567"
          },
          {
            "label": "_locked",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_uint256,t_struct(LockedBalance)35056_storage)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:568"
          },
          {
            "label": "epoch",
            "offset": 0,
            "slot": "19",
            "type": "t_uint256",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:569"
          },
          {
            "label": "slope_changes",
            "offset": 0,
            "slot": "20",
            "type": "t_mapping(t_uint256,t_int128)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:570"
          },
          {
            "label": "supply",
            "offset": 0,
            "slot": "21",
            "type": "t_uint256",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:571"
          },
          {
            "label": "voted",
            "offset": 0,
            "slot": "22",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:1255"
          },
          {
            "label": "_delegates",
            "offset": 0,
            "slot": "23",
            "type": "t_mapping(t_address,t_address)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:1388"
          },
          {
            "label": "checkpoints",
            "offset": 0,
            "slot": "24",
            "type": "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)26768_storage))",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:1392"
          },
          {
            "label": "numCheckpoints",
            "offset": 0,
            "slot": "25",
            "type": "t_mapping(t_address,t_uint32)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:1395"
          },
          {
            "label": "nonces",
            "offset": 0,
            "slot": "26",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:1398"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Point)35051_storage)1000000000_storage": {
            "label": "struct IVotingEscrow.Point[1000000000]",
            "numberOfBytes": "96000000000"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_int128": {
            "label": "int128",
            "numberOfBytes": "16"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)26768_storage))": {
            "label": "mapping(address => mapping(uint32 => struct VotingEscrow.Checkpoint))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Point)35051_storage)1000000000_storage)": {
            "label": "mapping(uint256 => struct IVotingEscrow.Point[1000000000])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_int128)": {
            "label": "mapping(uint256 => int128)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LockedBalance)35056_storage)": {
            "label": "mapping(uint256 => struct IVotingEscrow.LockedBalance)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Point)35051_storage)": {
            "label": "mapping(uint256 => struct IVotingEscrow.Point)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_struct(Checkpoint)26768_storage)": {
            "label": "mapping(uint32 => struct VotingEscrow.Checkpoint)",
            "numberOfBytes": "32"
          },
          "t_struct(Checkpoint)26768_storage": {
            "label": "struct VotingEscrow.Checkpoint",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenIds",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(LockedBalance)35056_storage": {
            "label": "struct IVotingEscrow.LockedBalance",
            "members": [
              {
                "label": "amount",
                "type": "t_int128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "end",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Point)35051_storage": {
            "label": "struct IVotingEscrow.Point",
            "members": [
              {
                "label": "bias",
                "type": "t_int128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "slope",
                "type": "t_int128",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "ts",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "blk",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "1483c0843cb7eac48da07a5a1796db1079f2eba16e12fa639fbb03ccafc7377e": {
      "address": "0x8fED870557C440FA2cd4cE32444D4af93c58f369",
      "txHash": "0xe50e4e2de30e054d25256ccb376a9b06f67ae7a0ff39dc8bc48142f5ce568f00",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "pairImplementation",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PairFactory",
            "src": "contracts/factories/PairFactory.sol:19"
          },
          {
            "label": "stableFee",
            "offset": 0,
            "slot": "152",
            "type": "t_uint256",
            "contract": "PairFactory",
            "src": "contracts/factories/PairFactory.sol:21"
          },
          {
            "label": "volatileFee",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "PairFactory",
            "src": "contracts/factories/PairFactory.sol:22"
          },
          {
            "label": "feeManager",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "PairFactory",
            "src": "contracts/factories/PairFactory.sol:24"
          },
          {
            "label": "pendingFeeManager",
            "offset": 0,
            "slot": "155",
            "type": "t_address",
            "contract": "PairFactory",
            "src": "contracts/factories/PairFactory.sol:25"
          },
          {
            "label": "pairManager",
            "offset": 0,
            "slot": "156",
            "type": "t_address",
            "contract": "PairFactory",
            "src": "contracts/factories/PairFactory.sol:26"
          },
          {
            "label": "getPair",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_bool,t_address)))",
            "contract": "PairFactory",
            "src": "contracts/factories/PairFactory.sol:28"
          },
          {
            "label": "isPair",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "PairFactory",
            "src": "contracts/factories/PairFactory.sol:30"
          },
          {
            "label": "_privileged",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "PairFactory",
            "src": "contracts/factories/PairFactory.sol:31"
          },
          {
            "label": "allPairs",
            "offset": 0,
            "slot": "160",
            "type": "t_array(t_address)dyn_storage",
            "contract": "PairFactory",
            "src": "contracts/factories/PairFactory.sol:33"
          },
          {
            "label": "whitelistedAMO",
            "offset": 0,
            "slot": "161",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "PairFactory",
            "src": "contracts/factories/PairFactory.sol:35"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_bool,t_address)))": {
            "label": "mapping(address => mapping(address => mapping(bool => address)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bool,t_address))": {
            "label": "mapping(address => mapping(bool => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bool,t_address)": {
            "label": "mapping(bool => address)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "adb792e0934f69b11b20d178dba33443eb400df95faad145f277ff61d5c02a67": {
      "address": "0x37ff9F424495D9Db3Ac247a762A374c5B12345a3",
      "txHash": "0xb18b78ac17717392fc6e934c91bfb1b2b4ac7235a227a0b78ea719132226db0b",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "last_bribe",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "BribeFactory",
            "src": "contracts/factories/BribeFactory.sol:12"
          },
          {
            "label": "_bribes",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_address)dyn_storage",
            "contract": "BribeFactory",
            "src": "contracts/factories/BribeFactory.sol:13"
          },
          {
            "label": "voter",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "BribeFactory",
            "src": "contracts/factories/BribeFactory.sol:14"
          },
          {
            "label": "defaultRewardToken",
            "offset": 0,
            "slot": "154",
            "type": "t_array(t_address)dyn_storage",
            "contract": "BribeFactory",
            "src": "contracts/factories/BribeFactory.sol:16"
          },
          {
            "label": "isDefaultRewardToken",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BribeFactory",
            "src": "contracts/factories/BribeFactory.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "ea8cca22d381a7b2aa71bc1e1986e61e82d5061b172664625265ea08cb50dfa8": {
      "address": "0x4D22C1227C31662293a4C39c208ff34497DF7Cfc",
      "txHash": "0xe19bf138917c8a089089af290cbcef165ef6a06f7c77d59eb47669e65ea1fca9",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "_ve",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "Voter",
            "src": "contracts/Voter.sol:20"
          },
          {
            "label": "factory",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "Voter",
            "src": "contracts/Voter.sol:21"
          },
          {
            "label": "base",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "Voter",
            "src": "contracts/Voter.sol:22"
          },
          {
            "label": "gaugefactory",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "Voter",
            "src": "contracts/Voter.sol:23"
          },
          {
            "label": "bribefactory",
            "offset": 0,
            "slot": "155",
            "type": "t_address",
            "contract": "Voter",
            "src": "contracts/Voter.sol:24"
          },
          {
            "label": "minter",
            "offset": 0,
            "slot": "156",
            "type": "t_address",
            "contract": "Voter",
            "src": "contracts/Voter.sol:25"
          },
          {
            "label": "governor",
            "offset": 0,
            "slot": "157",
            "type": "t_address",
            "contract": "Voter",
            "src": "contracts/Voter.sol:26"
          },
          {
            "label": "emergencyCouncil",
            "offset": 0,
            "slot": "158",
            "type": "t_address",
            "contract": "Voter",
            "src": "contracts/Voter.sol:27"
          },
          {
            "label": "index",
            "offset": 0,
            "slot": "159",
            "type": "t_uint256",
            "contract": "Voter",
            "src": "contracts/Voter.sol:29"
          },
          {
            "label": "supplyIndex",
            "offset": 0,
            "slot": "160",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Voter",
            "src": "contracts/Voter.sol:30"
          },
          {
            "label": "claimable",
            "offset": 0,
            "slot": "161",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Voter",
            "src": "contracts/Voter.sol:31"
          },
          {
            "label": "totalWeight",
            "offset": 0,
            "slot": "162",
            "type": "t_uint256",
            "contract": "Voter",
            "src": "contracts/Voter.sol:33"
          },
          {
            "label": "pools",
            "offset": 0,
            "slot": "163",
            "type": "t_array(t_address)dyn_storage",
            "contract": "Voter",
            "src": "contracts/Voter.sol:35"
          },
          {
            "label": "gauges",
            "offset": 0,
            "slot": "164",
            "type": "t_mapping(t_address,t_address)",
            "contract": "Voter",
            "src": "contracts/Voter.sol:36"
          },
          {
            "label": "gaugesDistributionTimestamp",
            "offset": 0,
            "slot": "165",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Voter",
            "src": "contracts/Voter.sol:37"
          },
          {
            "label": "poolForGauge",
            "offset": 0,
            "slot": "166",
            "type": "t_mapping(t_address,t_address)",
            "contract": "Voter",
            "src": "contracts/Voter.sol:38"
          },
          {
            "label": "internal_bribes",
            "offset": 0,
            "slot": "167",
            "type": "t_mapping(t_address,t_address)",
            "contract": "Voter",
            "src": "contracts/Voter.sol:39"
          },
          {
            "label": "external_bribes",
            "offset": 0,
            "slot": "168",
            "type": "t_mapping(t_address,t_address)",
            "contract": "Voter",
            "src": "contracts/Voter.sol:40"
          },
          {
            "label": "weights",
            "offset": 0,
            "slot": "169",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Voter",
            "src": "contracts/Voter.sol:41"
          },
          {
            "label": "votes",
            "offset": 0,
            "slot": "170",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "Voter",
            "src": "contracts/Voter.sol:42"
          },
          {
            "label": "poolVote",
            "offset": 0,
            "slot": "171",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "Voter",
            "src": "contracts/Voter.sol:43"
          },
          {
            "label": "usedWeights",
            "offset": 0,
            "slot": "172",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Voter",
            "src": "contracts/Voter.sol:44"
          },
          {
            "label": "lastVoted",
            "offset": 0,
            "slot": "173",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Voter",
            "src": "contracts/Voter.sol:45"
          },
          {
            "label": "isGauge",
            "offset": 0,
            "slot": "174",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Voter",
            "src": "contracts/Voter.sol:46"
          },
          {
            "label": "isWhitelisted",
            "offset": 0,
            "slot": "175",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Voter",
            "src": "contracts/Voter.sol:47"
          },
          {
            "label": "isAlive",
            "offset": 0,
            "slot": "176",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Voter",
            "src": "contracts/Voter.sol:48"
          },
          {
            "label": "zusd",
            "offset": 0,
            "slot": "177",
            "type": "t_address",
            "contract": "Voter",
            "src": "contracts/Voter.sol:50"
          },
          {
            "label": "isBribe",
            "offset": 0,
            "slot": "178",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Voter",
            "src": "contracts/Voter.sol:52"
          },
          {
            "label": "epochController",
            "offset": 0,
            "slot": "179",
            "type": "t_address",
            "contract": "Voter",
            "src": "contracts/Voter.sol:54"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "db0d6f62dd6ebf46c60cc2779bce7b4752647f01455aa5c91e0179f9be1755d6": {
      "address": "0x9aB4645f74Da8571265BeC2eeB6C5b4cCA98361B",
      "txHash": "0xc95e4ff9e0f49056b5df69644d698b781376365daed007f562d44d2d8cbc54fa",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "minter",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IMinter)34536",
            "contract": "EpochController",
            "src": "contracts/automation/EpochController.sol:11"
          },
          {
            "label": "voter",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(IVoter)35033",
            "contract": "EpochController",
            "src": "contracts/automation/EpochController.sol:12"
          },
          {
            "label": "batchSize",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "EpochController",
            "src": "contracts/automation/EpochController.sol:13"
          },
          {
            "label": "_lastProcessed",
            "offset": 0,
            "slot": "104",
            "type": "t_uint256",
            "contract": "EpochController",
            "src": "contracts/automation/EpochController.sol:15"
          },
          {
            "label": "_isDistributing",
            "offset": 0,
            "slot": "105",
            "type": "t_bool",
            "contract": "EpochController",
            "src": "contracts/automation/EpochController.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IMinter)34536": {
            "label": "contract IMinter",
            "numberOfBytes": "20"
          },
          "t_contract(IVoter)35033": {
            "label": "contract IVoter",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "2c9ffb5271631d0954656f56dee1ebc03fc9a576669a4afdf7fe22e914843384": {
      "address": "0x4aB59E8Be92236741067Def13c364eDc66E64c00",
      "txHash": "0xb42e04fdf9d0252b438a5fe329c24e9126b6406d1018614bed18d46a59ba6c31",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "start_time",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "RewardsDistributor",
            "src": "contracts/RewardsDistributor.sol:23"
          },
          {
            "label": "time_cursor",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "RewardsDistributor",
            "src": "contracts/RewardsDistributor.sol:24"
          },
          {
            "label": "time_cursor_of",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "RewardsDistributor",
            "src": "contracts/RewardsDistributor.sol:25"
          },
          {
            "label": "user_epoch_of",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "RewardsDistributor",
            "src": "contracts/RewardsDistributor.sol:26"
          },
          {
            "label": "last_token_time",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "RewardsDistributor",
            "src": "contracts/RewardsDistributor.sol:28"
          },
          {
            "label": "tokens_per_week",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_uint256)1000000000000000_storage",
            "contract": "RewardsDistributor",
            "src": "contracts/RewardsDistributor.sol:29"
          },
          {
            "label": "token_last_balance",
            "offset": 0,
            "slot": "1000000000000006",
            "type": "t_uint256",
            "contract": "RewardsDistributor",
            "src": "contracts/RewardsDistributor.sol:30"
          },
          {
            "label": "ve_supply",
            "offset": 0,
            "slot": "1000000000000007",
            "type": "t_array(t_uint256)1000000000000000_storage",
            "contract": "RewardsDistributor",
            "src": "contracts/RewardsDistributor.sol:31"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "2000000000000007",
            "type": "t_address",
            "contract": "RewardsDistributor",
            "src": "contracts/RewardsDistributor.sol:33"
          },
          {
            "label": "voting_escrow",
            "offset": 0,
            "slot": "2000000000000008",
            "type": "t_address",
            "contract": "RewardsDistributor",
            "src": "contracts/RewardsDistributor.sol:34"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "2000000000000009",
            "type": "t_address",
            "contract": "RewardsDistributor",
            "src": "contracts/RewardsDistributor.sol:35"
          },
          {
            "label": "depositor",
            "offset": 0,
            "slot": "2000000000000010",
            "type": "t_address",
            "contract": "RewardsDistributor",
            "src": "contracts/RewardsDistributor.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)1000000000000000_storage": {
            "label": "uint256[1000000000000000]",
            "numberOfBytes": "32000000000000000"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "dfa5e0dc3a4a2d966859234b5b2861b0ee61158a68d803cb31289472af636102": {
      "address": "0xbd6fEe0421b4F551Ab878090C4fAB77ed4D2CFAA",
      "txHash": "0x701418e1378d69050cf0ac07a82b076ab6ecad88c6c212ede3b4372276d201f7",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "token",
            "offset": 2,
            "slot": "0",
            "type": "t_address",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:72"
          },
          {
            "label": "voter",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:73"
          },
          {
            "label": "team",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:74"
          },
          {
            "label": "artProxy",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:75"
          },
          {
            "label": "api",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:76"
          },
          {
            "label": "_point_history",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_struct(Point)8611_storage)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:78"
          },
          {
            "label": "supportedInterfaces",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:81"
          },
          {
            "label": "tokenId",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:93"
          },
          {
            "label": "_entered_state",
            "offset": 0,
            "slot": "8",
            "type": "t_uint8",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:122"
          },
          {
            "label": "idToOwner",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:176"
          },
          {
            "label": "ownerToNFTokenCount",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:179"
          },
          {
            "label": "idToApprovals",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:206"
          },
          {
            "label": "ownerToOperators",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:209"
          },
          {
            "label": "ownership_change",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:211"
          },
          {
            "label": "ownerToNFTokenIdList",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:442"
          },
          {
            "label": "tokenToOwnerIndex",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:446"
          },
          {
            "label": "user_point_epoch",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:566"
          },
          {
            "label": "_user_point_history",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_uint256,t_array(t_struct(Point)8611_storage)1000000000_storage)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:567"
          },
          {
            "label": "_locked",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_uint256,t_struct(LockedBalance)8616_storage)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:568"
          },
          {
            "label": "epoch",
            "offset": 0,
            "slot": "19",
            "type": "t_uint256",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:569"
          },
          {
            "label": "slope_changes",
            "offset": 0,
            "slot": "20",
            "type": "t_mapping(t_uint256,t_int128)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:570"
          },
          {
            "label": "supply",
            "offset": 0,
            "slot": "21",
            "type": "t_uint256",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:571"
          },
          {
            "label": "voted",
            "offset": 0,
            "slot": "22",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:1255"
          },
          {
            "label": "_delegates",
            "offset": 0,
            "slot": "23",
            "type": "t_mapping(t_address,t_address)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:1388"
          },
          {
            "label": "checkpoints",
            "offset": 0,
            "slot": "24",
            "type": "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)3375_storage))",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:1392"
          },
          {
            "label": "numCheckpoints",
            "offset": 0,
            "slot": "25",
            "type": "t_mapping(t_address,t_uint32)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:1395"
          },
          {
            "label": "nonces",
            "offset": 0,
            "slot": "26",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:1398"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Point)8611_storage)1000000000_storage": {
            "label": "struct IVotingEscrow.Point[1000000000]",
            "numberOfBytes": "96000000000"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_int128": {
            "label": "int128",
            "numberOfBytes": "16"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)3375_storage))": {
            "label": "mapping(address => mapping(uint32 => struct VotingEscrow.Checkpoint))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Point)8611_storage)1000000000_storage)": {
            "label": "mapping(uint256 => struct IVotingEscrow.Point[1000000000])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_int128)": {
            "label": "mapping(uint256 => int128)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LockedBalance)8616_storage)": {
            "label": "mapping(uint256 => struct IVotingEscrow.LockedBalance)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Point)8611_storage)": {
            "label": "mapping(uint256 => struct IVotingEscrow.Point)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_struct(Checkpoint)3375_storage)": {
            "label": "mapping(uint32 => struct VotingEscrow.Checkpoint)",
            "numberOfBytes": "32"
          },
          "t_struct(Checkpoint)3375_storage": {
            "label": "struct VotingEscrow.Checkpoint",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenIds",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(LockedBalance)8616_storage": {
            "label": "struct IVotingEscrow.LockedBalance",
            "members": [
              {
                "label": "amount",
                "type": "t_int128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "end",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Point)8611_storage": {
            "label": "struct IVotingEscrow.Point",
            "members": [
              {
                "label": "bias",
                "type": "t_int128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "slope",
                "type": "t_int128",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "ts",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "blk",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "923888d7e36fcc52573ede29831046cb6ccfa949f731dae2a9bf9046eb37be9f": {
      "address": "0x8ab7Ebff35a7D5D68400302f8C184A885Aa160bD",
      "txHash": "0x0aa2ff710d5baa95eacb8f93de2d2a563966d079d7d2c67b2adb68f9a3f24750",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "MulticallUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/MulticallUpgradeable.sol:51"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "factory",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IPairFactory)34799",
            "contract": "SingleTokenLiquidityProvider",
            "src": "contracts/SingleTokenLiquidityProvider.sol:22"
          },
          {
            "label": "requiresWhitelisting",
            "offset": 20,
            "slot": "151",
            "type": "t_bool",
            "contract": "SingleTokenLiquidityProvider",
            "src": "contracts/SingleTokenLiquidityProvider.sol:25"
          },
          {
            "label": "maxSwapRatio",
            "offset": 0,
            "slot": "152",
            "type": "t_uint256",
            "contract": "SingleTokenLiquidityProvider",
            "src": "contracts/SingleTokenLiquidityProvider.sol:28"
          },
          {
            "label": "isWhitelisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "SingleTokenLiquidityProvider",
            "src": "contracts/SingleTokenLiquidityProvider.sol:31"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IPairFactory)34799": {
            "label": "contract IPairFactory",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "ec76d94b92fedf9a6f0618f3eadfc026120d7326c27575f3a0137b397b31d4eb": {
      "address": "0xd213c70374600F9DE6c7F6c6B0DC7b7B3ee2B175",
      "txHash": "0x688b58532ac2a8aa5b953cfa7964f7f5059b2175074cf89113e047899e972d96",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "token",
            "offset": 2,
            "slot": "0",
            "type": "t_address",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:72"
          },
          {
            "label": "voter",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:73"
          },
          {
            "label": "team",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:74"
          },
          {
            "label": "artProxy",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:75"
          },
          {
            "label": "api",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:76"
          },
          {
            "label": "_point_history",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_struct(Point)14497_storage)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:78"
          },
          {
            "label": "supportedInterfaces",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:81"
          },
          {
            "label": "tokenId",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:93"
          },
          {
            "label": "_entered_state",
            "offset": 0,
            "slot": "8",
            "type": "t_uint8",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:122"
          },
          {
            "label": "idToOwner",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:176"
          },
          {
            "label": "ownerToNFTokenCount",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:179"
          },
          {
            "label": "idToApprovals",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:206"
          },
          {
            "label": "ownerToOperators",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:209"
          },
          {
            "label": "ownership_change",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:211"
          },
          {
            "label": "ownerToNFTokenIdList",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:443"
          },
          {
            "label": "tokenToOwnerIndex",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:447"
          },
          {
            "label": "user_point_epoch",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:567"
          },
          {
            "label": "_user_point_history",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_uint256,t_array(t_struct(Point)14497_storage)1000000000_storage)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:568"
          },
          {
            "label": "_locked",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_uint256,t_struct(LockedBalance)14502_storage)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:569"
          },
          {
            "label": "epoch",
            "offset": 0,
            "slot": "19",
            "type": "t_uint256",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:570"
          },
          {
            "label": "slope_changes",
            "offset": 0,
            "slot": "20",
            "type": "t_mapping(t_uint256,t_int128)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:571"
          },
          {
            "label": "supply",
            "offset": 0,
            "slot": "21",
            "type": "t_uint256",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:572"
          },
          {
            "label": "voted",
            "offset": 0,
            "slot": "22",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:1263"
          },
          {
            "label": "_delegates",
            "offset": 0,
            "slot": "23",
            "type": "t_mapping(t_address,t_address)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:1396"
          },
          {
            "label": "checkpoints",
            "offset": 0,
            "slot": "24",
            "type": "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)9076_storage))",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:1400"
          },
          {
            "label": "numCheckpoints",
            "offset": 0,
            "slot": "25",
            "type": "t_mapping(t_address,t_uint32)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:1403"
          },
          {
            "label": "nonces",
            "offset": 0,
            "slot": "26",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:1406"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Point)14497_storage)1000000000_storage": {
            "label": "struct IVotingEscrow.Point[1000000000]",
            "numberOfBytes": "96000000000"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_int128": {
            "label": "int128",
            "numberOfBytes": "16"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)9076_storage))": {
            "label": "mapping(address => mapping(uint32 => struct VotingEscrow.Checkpoint))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Point)14497_storage)1000000000_storage)": {
            "label": "mapping(uint256 => struct IVotingEscrow.Point[1000000000])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_int128)": {
            "label": "mapping(uint256 => int128)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LockedBalance)14502_storage)": {
            "label": "mapping(uint256 => struct IVotingEscrow.LockedBalance)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Point)14497_storage)": {
            "label": "mapping(uint256 => struct IVotingEscrow.Point)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_struct(Checkpoint)9076_storage)": {
            "label": "mapping(uint32 => struct VotingEscrow.Checkpoint)",
            "numberOfBytes": "32"
          },
          "t_struct(Checkpoint)9076_storage": {
            "label": "struct VotingEscrow.Checkpoint",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenIds",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(LockedBalance)14502_storage": {
            "label": "struct IVotingEscrow.LockedBalance",
            "members": [
              {
                "label": "amount",
                "type": "t_int128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "end",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Point)14497_storage": {
            "label": "struct IVotingEscrow.Point",
            "members": [
              {
                "label": "bias",
                "type": "t_int128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "slope",
                "type": "t_int128",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "ts",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "blk",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "2939b73c663f0dd36a844c2335cc43b889a609988475fd7eace097807d50679e": {
      "address": "0xEd40dfc01f7e73679cBB3031F2E51BAc3bA54CF5",
      "txHash": "0x9dffab6dcb1e4dda6d9d3d73a34db1b4dd56616ab8b947f261467ab9f125f01a",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "token",
            "offset": 2,
            "slot": "0",
            "type": "t_address",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:72"
          },
          {
            "label": "voter",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:73"
          },
          {
            "label": "team",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:74"
          },
          {
            "label": "artProxy",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:75"
          },
          {
            "label": "api",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:76"
          },
          {
            "label": "_point_history",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_struct(Point)8599_storage)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:78"
          },
          {
            "label": "supportedInterfaces",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:81"
          },
          {
            "label": "tokenId",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:93"
          },
          {
            "label": "_entered_state",
            "offset": 0,
            "slot": "8",
            "type": "t_uint8",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:122"
          },
          {
            "label": "idToOwner",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:176"
          },
          {
            "label": "ownerToNFTokenCount",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:179"
          },
          {
            "label": "idToApprovals",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:206"
          },
          {
            "label": "ownerToOperators",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:209"
          },
          {
            "label": "ownership_change",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:211"
          },
          {
            "label": "ownerToNFTokenIdList",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:443"
          },
          {
            "label": "tokenToOwnerIndex",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:447"
          },
          {
            "label": "user_point_epoch",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:567"
          },
          {
            "label": "_user_point_history",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_uint256,t_array(t_struct(Point)8599_storage)1000000000_storage)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:568"
          },
          {
            "label": "_locked",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_uint256,t_struct(LockedBalance)8604_storage)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:569"
          },
          {
            "label": "epoch",
            "offset": 0,
            "slot": "19",
            "type": "t_uint256",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:570"
          },
          {
            "label": "slope_changes",
            "offset": 0,
            "slot": "20",
            "type": "t_mapping(t_uint256,t_int128)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:571"
          },
          {
            "label": "supply",
            "offset": 0,
            "slot": "21",
            "type": "t_uint256",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:572"
          },
          {
            "label": "voted",
            "offset": 0,
            "slot": "22",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:1262"
          },
          {
            "label": "_delegates",
            "offset": 0,
            "slot": "23",
            "type": "t_mapping(t_address,t_address)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:1395"
          },
          {
            "label": "checkpoints",
            "offset": 0,
            "slot": "24",
            "type": "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)3375_storage))",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:1399"
          },
          {
            "label": "numCheckpoints",
            "offset": 0,
            "slot": "25",
            "type": "t_mapping(t_address,t_uint32)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:1402"
          },
          {
            "label": "nonces",
            "offset": 0,
            "slot": "26",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:1405"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Point)8599_storage)1000000000_storage": {
            "label": "struct IVotingEscrow.Point[1000000000]",
            "numberOfBytes": "96000000000"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_int128": {
            "label": "int128",
            "numberOfBytes": "16"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)3375_storage))": {
            "label": "mapping(address => mapping(uint32 => struct VotingEscrow.Checkpoint))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Point)8599_storage)1000000000_storage)": {
            "label": "mapping(uint256 => struct IVotingEscrow.Point[1000000000])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_int128)": {
            "label": "mapping(uint256 => int128)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LockedBalance)8604_storage)": {
            "label": "mapping(uint256 => struct IVotingEscrow.LockedBalance)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Point)8599_storage)": {
            "label": "mapping(uint256 => struct IVotingEscrow.Point)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_struct(Checkpoint)3375_storage)": {
            "label": "mapping(uint32 => struct VotingEscrow.Checkpoint)",
            "numberOfBytes": "32"
          },
          "t_struct(Checkpoint)3375_storage": {
            "label": "struct VotingEscrow.Checkpoint",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenIds",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(LockedBalance)8604_storage": {
            "label": "struct IVotingEscrow.LockedBalance",
            "members": [
              {
                "label": "amount",
                "type": "t_int128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "end",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Point)8599_storage": {
            "label": "struct IVotingEscrow.Point",
            "members": [
              {
                "label": "bias",
                "type": "t_int128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "slope",
                "type": "t_int128",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "ts",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "blk",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "bb941d8b62fc94f634efb9107cf752503713d9b4edab755a8c297779d58a50b7": {
      "address": "0xC7D1059cdA98d8b1FD4D6152fce4131B022BF7Ea",
      "txHash": "0x3cbc429805f8db2f2229e08d7dd40acd62e32133897e1cc3c81ca43d430f0a51",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "_ve",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "Voter",
            "src": "contracts/Voter.sol:20"
          },
          {
            "label": "factory",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "Voter",
            "src": "contracts/Voter.sol:21"
          },
          {
            "label": "base",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "Voter",
            "src": "contracts/Voter.sol:22"
          },
          {
            "label": "gaugefactory",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "Voter",
            "src": "contracts/Voter.sol:23"
          },
          {
            "label": "bribefactory",
            "offset": 0,
            "slot": "155",
            "type": "t_address",
            "contract": "Voter",
            "src": "contracts/Voter.sol:24"
          },
          {
            "label": "minter",
            "offset": 0,
            "slot": "156",
            "type": "t_address",
            "contract": "Voter",
            "src": "contracts/Voter.sol:25"
          },
          {
            "label": "governor",
            "offset": 0,
            "slot": "157",
            "type": "t_address",
            "contract": "Voter",
            "src": "contracts/Voter.sol:26"
          },
          {
            "label": "emergencyCouncil",
            "offset": 0,
            "slot": "158",
            "type": "t_address",
            "contract": "Voter",
            "src": "contracts/Voter.sol:27"
          },
          {
            "label": "index",
            "offset": 0,
            "slot": "159",
            "type": "t_uint256",
            "contract": "Voter",
            "src": "contracts/Voter.sol:29"
          },
          {
            "label": "supplyIndex",
            "offset": 0,
            "slot": "160",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Voter",
            "src": "contracts/Voter.sol:30"
          },
          {
            "label": "claimable",
            "offset": 0,
            "slot": "161",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Voter",
            "src": "contracts/Voter.sol:31"
          },
          {
            "label": "totalWeight",
            "offset": 0,
            "slot": "162",
            "type": "t_uint256",
            "contract": "Voter",
            "src": "contracts/Voter.sol:33"
          },
          {
            "label": "pools",
            "offset": 0,
            "slot": "163",
            "type": "t_array(t_address)dyn_storage",
            "contract": "Voter",
            "src": "contracts/Voter.sol:35"
          },
          {
            "label": "gauges",
            "offset": 0,
            "slot": "164",
            "type": "t_mapping(t_address,t_address)",
            "contract": "Voter",
            "src": "contracts/Voter.sol:36"
          },
          {
            "label": "gaugesDistributionTimestamp",
            "offset": 0,
            "slot": "165",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Voter",
            "src": "contracts/Voter.sol:37"
          },
          {
            "label": "poolForGauge",
            "offset": 0,
            "slot": "166",
            "type": "t_mapping(t_address,t_address)",
            "contract": "Voter",
            "src": "contracts/Voter.sol:38"
          },
          {
            "label": "internal_bribes",
            "offset": 0,
            "slot": "167",
            "type": "t_mapping(t_address,t_address)",
            "contract": "Voter",
            "src": "contracts/Voter.sol:39"
          },
          {
            "label": "external_bribes",
            "offset": 0,
            "slot": "168",
            "type": "t_mapping(t_address,t_address)",
            "contract": "Voter",
            "src": "contracts/Voter.sol:40"
          },
          {
            "label": "weights",
            "offset": 0,
            "slot": "169",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Voter",
            "src": "contracts/Voter.sol:41"
          },
          {
            "label": "votes",
            "offset": 0,
            "slot": "170",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "Voter",
            "src": "contracts/Voter.sol:42"
          },
          {
            "label": "poolVote",
            "offset": 0,
            "slot": "171",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "Voter",
            "src": "contracts/Voter.sol:43"
          },
          {
            "label": "usedWeights",
            "offset": 0,
            "slot": "172",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Voter",
            "src": "contracts/Voter.sol:44"
          },
          {
            "label": "lastVoted",
            "offset": 0,
            "slot": "173",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Voter",
            "src": "contracts/Voter.sol:45"
          },
          {
            "label": "isGauge",
            "offset": 0,
            "slot": "174",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Voter",
            "src": "contracts/Voter.sol:46"
          },
          {
            "label": "isWhitelisted",
            "offset": 0,
            "slot": "175",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Voter",
            "src": "contracts/Voter.sol:47"
          },
          {
            "label": "isAlive",
            "offset": 0,
            "slot": "176",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Voter",
            "src": "contracts/Voter.sol:48"
          },
          {
            "label": "zusd",
            "offset": 0,
            "slot": "177",
            "type": "t_address",
            "contract": "Voter",
            "src": "contracts/Voter.sol:50"
          },
          {
            "label": "isBribe",
            "offset": 0,
            "slot": "178",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Voter",
            "src": "contracts/Voter.sol:52"
          },
          {
            "label": "epochController",
            "offset": 0,
            "slot": "179",
            "type": "t_address",
            "contract": "Voter",
            "src": "contracts/Voter.sol:54"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "0125871f27a34f9aada30c5ce468bc8139c5bf24d0bd3329aa5c062616a82e96": {
      "address": "0xBDB860D1Aa2Defe2AfA01f7250904444d6DA4bb9",
      "txHash": "0x0a0968c05e55d4261d433312e63d2ab5cc188d3c6441f65c0a66959c414f99fd",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
          },
          {
            "label": "minter",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "Jungl",
            "src": "contracts/Jungl.sol:7"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "ee2804602f3c2c06737e5e233ccd34ce598abf91aaf1f785f373b9a29569daf5": {
      "address": "0x902cD41df9E885F4d6A4A9B6b7cAc29Cd54F3694",
      "txHash": "0x8a7f14665657c2d28663a74d650bebb285cc133aca416febb061d6245b5a663e",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "token",
            "offset": 2,
            "slot": "0",
            "type": "t_address",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:68"
          },
          {
            "label": "voter",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:69"
          },
          {
            "label": "team",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:70"
          },
          {
            "label": "artProxy",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:71"
          },
          {
            "label": "api",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:72"
          },
          {
            "label": "_point_history",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_struct(Point)34857_storage)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:74"
          },
          {
            "label": "supportedInterfaces",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:77"
          },
          {
            "label": "tokenId",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:89"
          },
          {
            "label": "_entered_state",
            "offset": 0,
            "slot": "8",
            "type": "t_uint8",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:118"
          },
          {
            "label": "idToOwner",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:172"
          },
          {
            "label": "ownerToNFTokenCount",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:175"
          },
          {
            "label": "idToApprovals",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:202"
          },
          {
            "label": "ownerToOperators",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:205"
          },
          {
            "label": "ownership_change",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:207"
          },
          {
            "label": "ownerToNFTokenIdList",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:438"
          },
          {
            "label": "tokenToOwnerIndex",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:442"
          },
          {
            "label": "user_point_epoch",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:562"
          },
          {
            "label": "_user_point_history",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_uint256,t_array(t_struct(Point)34857_storage)1000000000_storage)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:563"
          },
          {
            "label": "_locked",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_uint256,t_struct(LockedBalance)34862_storage)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:564"
          },
          {
            "label": "epoch",
            "offset": 0,
            "slot": "19",
            "type": "t_uint256",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:565"
          },
          {
            "label": "slope_changes",
            "offset": 0,
            "slot": "20",
            "type": "t_mapping(t_uint256,t_int128)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:566"
          },
          {
            "label": "supply",
            "offset": 0,
            "slot": "21",
            "type": "t_uint256",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:567"
          },
          {
            "label": "voted",
            "offset": 0,
            "slot": "22",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:1230"
          },
          {
            "label": "_delegates",
            "offset": 0,
            "slot": "23",
            "type": "t_mapping(t_address,t_address)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:1363"
          },
          {
            "label": "checkpoints",
            "offset": 0,
            "slot": "24",
            "type": "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)26704_storage))",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:1367"
          },
          {
            "label": "numCheckpoints",
            "offset": 0,
            "slot": "25",
            "type": "t_mapping(t_address,t_uint32)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:1370"
          },
          {
            "label": "nonces",
            "offset": 0,
            "slot": "26",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:1373"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Point)34857_storage)1000000000_storage": {
            "label": "struct IVotingEscrow.Point[1000000000]",
            "numberOfBytes": "96000000000"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_int128": {
            "label": "int128",
            "numberOfBytes": "16"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)26704_storage))": {
            "label": "mapping(address => mapping(uint32 => struct VotingEscrow.Checkpoint))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Point)34857_storage)1000000000_storage)": {
            "label": "mapping(uint256 => struct IVotingEscrow.Point[1000000000])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_int128)": {
            "label": "mapping(uint256 => int128)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LockedBalance)34862_storage)": {
            "label": "mapping(uint256 => struct IVotingEscrow.LockedBalance)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Point)34857_storage)": {
            "label": "mapping(uint256 => struct IVotingEscrow.Point)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_struct(Checkpoint)26704_storage)": {
            "label": "mapping(uint32 => struct VotingEscrow.Checkpoint)",
            "numberOfBytes": "32"
          },
          "t_struct(Checkpoint)26704_storage": {
            "label": "struct VotingEscrow.Checkpoint",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenIds",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(LockedBalance)34862_storage": {
            "label": "struct IVotingEscrow.LockedBalance",
            "members": [
              {
                "label": "amount",
                "type": "t_int128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "end",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Point)34857_storage": {
            "label": "struct IVotingEscrow.Point",
            "members": [
              {
                "label": "bias",
                "type": "t_int128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "slope",
                "type": "t_int128",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "ts",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "blk",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "09b9f18e2dcb21b6ed240dae704646014e8b76f5c9405642635a783ee23b95c6": {
      "address": "0xfAD40429e1423E45C897d64ad7c8db4D925484D3",
      "txHash": "0x8a857cb45b594a4ece158b3c7ae5b055174023ee75f86fd38348bf8a6d844dbc",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "MulticallUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/MulticallUpgradeable.sol:51"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "factory",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IPairFactory)34605",
            "contract": "SingleTokenLiquidityProvider",
            "src": "contracts/SingleTokenLiquidityProvider.sol:22"
          },
          {
            "label": "requiresWhitelisting",
            "offset": 20,
            "slot": "151",
            "type": "t_bool",
            "contract": "SingleTokenLiquidityProvider",
            "src": "contracts/SingleTokenLiquidityProvider.sol:25"
          },
          {
            "label": "maxSwapRatio",
            "offset": 0,
            "slot": "152",
            "type": "t_uint256",
            "contract": "SingleTokenLiquidityProvider",
            "src": "contracts/SingleTokenLiquidityProvider.sol:28"
          },
          {
            "label": "isWhitelisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "SingleTokenLiquidityProvider",
            "src": "contracts/SingleTokenLiquidityProvider.sol:31"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IPairFactory)34605": {
            "label": "contract IPairFactory",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "aab0d0a9dc40d4a8a73bad244b1430cbd748f68cc1c6eb899c354bade6373028": {
      "address": "0xE186f1aFa7Df67cd0AF3b84836510720b7Ff283c",
      "txHash": "0xfdfeadc6bc2f37a0ff3f1553e220471a3548e8205fb2ce67eeb0dfa587e8899a",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "token",
            "offset": 2,
            "slot": "0",
            "type": "t_address",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:68"
          },
          {
            "label": "voter",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:69"
          },
          {
            "label": "team",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:70"
          },
          {
            "label": "artProxy",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:71"
          },
          {
            "label": "api",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:72"
          },
          {
            "label": "_point_history",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_struct(Point)35667_storage)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:74"
          },
          {
            "label": "supportedInterfaces",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:77"
          },
          {
            "label": "tokenId",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:89"
          },
          {
            "label": "_entered_state",
            "offset": 0,
            "slot": "8",
            "type": "t_uint8",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:118"
          },
          {
            "label": "idToOwner",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:172"
          },
          {
            "label": "ownerToNFTokenCount",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:175"
          },
          {
            "label": "idToApprovals",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:202"
          },
          {
            "label": "ownerToOperators",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:205"
          },
          {
            "label": "ownership_change",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:207"
          },
          {
            "label": "ownerToNFTokenIdList",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:438"
          },
          {
            "label": "tokenToOwnerIndex",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:442"
          },
          {
            "label": "user_point_epoch",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:562"
          },
          {
            "label": "_user_point_history",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_uint256,t_array(t_struct(Point)35667_storage)1000000000_storage)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:563"
          },
          {
            "label": "_locked",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_uint256,t_struct(LockedBalance)35672_storage)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:564"
          },
          {
            "label": "epoch",
            "offset": 0,
            "slot": "19",
            "type": "t_uint256",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:565"
          },
          {
            "label": "slope_changes",
            "offset": 0,
            "slot": "20",
            "type": "t_mapping(t_uint256,t_int128)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:566"
          },
          {
            "label": "supply",
            "offset": 0,
            "slot": "21",
            "type": "t_uint256",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:567"
          },
          {
            "label": "voted",
            "offset": 0,
            "slot": "22",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:1230"
          },
          {
            "label": "_delegates",
            "offset": 0,
            "slot": "23",
            "type": "t_mapping(t_address,t_address)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:1363"
          },
          {
            "label": "checkpoints",
            "offset": 0,
            "slot": "24",
            "type": "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)27352_storage))",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:1367"
          },
          {
            "label": "numCheckpoints",
            "offset": 0,
            "slot": "25",
            "type": "t_mapping(t_address,t_uint32)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:1370"
          },
          {
            "label": "nonces",
            "offset": 0,
            "slot": "26",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VotingEscrow",
            "src": "contracts/VotingEscrow.sol:1373"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Point)35667_storage)1000000000_storage": {
            "label": "struct IVotingEscrow.Point[1000000000]",
            "numberOfBytes": "96000000000"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_int128": {
            "label": "int128",
            "numberOfBytes": "16"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)27352_storage))": {
            "label": "mapping(address => mapping(uint32 => struct VotingEscrow.Checkpoint))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Point)35667_storage)1000000000_storage)": {
            "label": "mapping(uint256 => struct IVotingEscrow.Point[1000000000])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_int128)": {
            "label": "mapping(uint256 => int128)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LockedBalance)35672_storage)": {
            "label": "mapping(uint256 => struct IVotingEscrow.LockedBalance)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Point)35667_storage)": {
            "label": "mapping(uint256 => struct IVotingEscrow.Point)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_struct(Checkpoint)27352_storage)": {
            "label": "mapping(uint32 => struct VotingEscrow.Checkpoint)",
            "numberOfBytes": "32"
          },
          "t_struct(Checkpoint)27352_storage": {
            "label": "struct VotingEscrow.Checkpoint",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenIds",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(LockedBalance)35672_storage": {
            "label": "struct IVotingEscrow.LockedBalance",
            "members": [
              {
                "label": "amount",
                "type": "t_int128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "end",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Point)35667_storage": {
            "label": "struct IVotingEscrow.Point",
            "members": [
              {
                "label": "bias",
                "type": "t_int128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "slope",
                "type": "t_int128",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "ts",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "blk",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "0a983fedc7fe14615c0827e2a3be8278093563ca8779b3f055b3f8f566d1ab0c": {
      "address": "0x03C6efd2A699499C272A888cddf069dB18eCCe52",
      "txHash": "0x0c32b5ca0fbac2e3ad979e05ced2fd909246d3aa33389ca472eb89ab305a7329",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "MulticallUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/MulticallUpgradeable.sol:51"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "factory",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IPairFactory)35415",
            "contract": "SingleTokenLiquidityProvider",
            "src": "contracts/SingleTokenLiquidityProvider.sol:22"
          },
          {
            "label": "requiresWhitelisting",
            "offset": 20,
            "slot": "151",
            "type": "t_bool",
            "contract": "SingleTokenLiquidityProvider",
            "src": "contracts/SingleTokenLiquidityProvider.sol:25"
          },
          {
            "label": "maxSwapRatio",
            "offset": 0,
            "slot": "152",
            "type": "t_uint256",
            "contract": "SingleTokenLiquidityProvider",
            "src": "contracts/SingleTokenLiquidityProvider.sol:28"
          },
          {
            "label": "isWhitelisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "SingleTokenLiquidityProvider",
            "src": "contracts/SingleTokenLiquidityProvider.sol:31"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IPairFactory)35415": {
            "label": "contract IPairFactory",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "ebf6bcae44f5cf2529ec1857eccad64c9f7bf98e0128379c6c6eb6844bf35f0e": {
      "address": "0x4883156B8CF49e043018490d5239f8354E66AdE0",
      "txHash": "0x24acb772ae8e7925bd569ac9ecc66c95b7237fb1d7769d70c426e0b1e4626311",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "gaugeBeacon",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(UpgradeableBeacon)4797",
            "contract": "GaugeFactory",
            "src": "contracts/factories/GaugeFactory.sol:12"
          },
          {
            "label": "gaugeAddress",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_address)dyn_storage",
            "contract": "GaugeFactory",
            "src": "contracts/factories/GaugeFactory.sol:14"
          },
          {
            "label": "last_gauge",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "GaugeFactory",
            "src": "contracts/factories/GaugeFactory.sol:15"
          },
          {
            "label": "gaugeImplementation",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "GaugeFactory",
            "src": "contracts/factories/GaugeFactory.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(UpgradeableBeacon)4797": {
            "label": "contract UpgradeableBeacon",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "0c3558d4967fd149076f6756b0ffd05964a3a1ab0c334b59a31d1816347b41cd": {
      "address": "0xb20d1140D90d22eBb6cB0b48A518Dd9D1a7d11B7",
      "txHash": "0x214880fa7d5c5e4fad73a82a911ef6916111e6a9a360edecc49995e462ae9b4c",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "bribebeacon",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(UpgradeableBeacon)3000",
            "contract": "BribeFactory",
            "src": "contracts/factories/BribeFactory.sol:14"
          },
          {
            "label": "bribeImplementation",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BribeFactory",
            "src": "contracts/factories/BribeFactory.sol:15"
          },
          {
            "label": "last_bribe",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "BribeFactory",
            "src": "contracts/factories/BribeFactory.sol:16"
          },
          {
            "label": "_bribes",
            "offset": 0,
            "slot": "154",
            "type": "t_array(t_address)dyn_storage",
            "contract": "BribeFactory",
            "src": "contracts/factories/BribeFactory.sol:17"
          },
          {
            "label": "voter",
            "offset": 0,
            "slot": "155",
            "type": "t_address",
            "contract": "BribeFactory",
            "src": "contracts/factories/BribeFactory.sol:18"
          },
          {
            "label": "defaultRewardToken",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_address)dyn_storage",
            "contract": "BribeFactory",
            "src": "contracts/factories/BribeFactory.sol:19"
          },
          {
            "label": "isDefaultRewardToken",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BribeFactory",
            "src": "contracts/factories/BribeFactory.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(UpgradeableBeacon)3000": {
            "label": "contract UpgradeableBeacon",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "9b995c60a1859f93473b40d4390164b5654a0a6e8d432157ee5ffb8b27438ae8": {
      "address": "0xbBe5662ce9d055A4aedB4292e97aF62d89b8c95a",
      "txHash": "0xc76a18689f90044c93da7f26379b874fa5e6123876661f45d2d3e62f0defdd9a",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "pairImplementation",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PairFactory",
            "src": "contracts/factories/PairFactory.sol:19"
          },
          {
            "label": "stableFee",
            "offset": 0,
            "slot": "152",
            "type": "t_uint256",
            "contract": "PairFactory",
            "src": "contracts/factories/PairFactory.sol:21"
          },
          {
            "label": "volatileFee",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "PairFactory",
            "src": "contracts/factories/PairFactory.sol:22"
          },
          {
            "label": "feeManager",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "PairFactory",
            "src": "contracts/factories/PairFactory.sol:24"
          },
          {
            "label": "pendingFeeManager",
            "offset": 0,
            "slot": "155",
            "type": "t_address",
            "contract": "PairFactory",
            "src": "contracts/factories/PairFactory.sol:25"
          },
          {
            "label": "getPair",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_bool,t_address)))",
            "contract": "PairFactory",
            "src": "contracts/factories/PairFactory.sol:27"
          },
          {
            "label": "isPair",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "PairFactory",
            "src": "contracts/factories/PairFactory.sol:29"
          },
          {
            "label": "_privileged",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "PairFactory",
            "src": "contracts/factories/PairFactory.sol:30"
          },
          {
            "label": "allPairs",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_address)dyn_storage",
            "contract": "PairFactory",
            "src": "contracts/factories/PairFactory.sol:32"
          },
          {
            "label": "pairManagers",
            "offset": 0,
            "slot": "160",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "PairFactory",
            "src": "contracts/factories/PairFactory.sol:34"
          },
          {
            "label": "whitelistedAMO",
            "offset": 0,
            "slot": "161",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "PairFactory",
            "src": "contracts/factories/PairFactory.sol:35"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_bool,t_address)))": {
            "label": "mapping(address => mapping(address => mapping(bool => address)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bool,t_address))": {
            "label": "mapping(address => mapping(bool => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bool,t_address)": {
            "label": "mapping(bool => address)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "1f29eecd00276ba685b73eee5345ec9eb66e77f88a212b4735e21c0451e26308": {
      "address": "0xd995e9359647362bAA717B9927A32f8f930c4a8b",
      "txHash": "0x155b9d3d6cf7ef8f6d864446a3cc7b8815db53f2d1626f9f89f06a77dc5f8278",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "pairImplementation",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PairFactory",
            "src": "contracts/factories/PairFactory.sol:19"
          },
          {
            "label": "stableFee",
            "offset": 0,
            "slot": "152",
            "type": "t_uint256",
            "contract": "PairFactory",
            "src": "contracts/factories/PairFactory.sol:21"
          },
          {
            "label": "volatileFee",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "PairFactory",
            "src": "contracts/factories/PairFactory.sol:22"
          },
          {
            "label": "feeManager",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "PairFactory",
            "src": "contracts/factories/PairFactory.sol:24"
          },
          {
            "label": "pendingFeeManager",
            "offset": 0,
            "slot": "155",
            "type": "t_address",
            "contract": "PairFactory",
            "src": "contracts/factories/PairFactory.sol:25"
          },
          {
            "label": "getPair",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_bool,t_address)))",
            "contract": "PairFactory",
            "src": "contracts/factories/PairFactory.sol:27"
          },
          {
            "label": "isPair",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "PairFactory",
            "src": "contracts/factories/PairFactory.sol:29"
          },
          {
            "label": "_privileged",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "PairFactory",
            "src": "contracts/factories/PairFactory.sol:30"
          },
          {
            "label": "allPairs",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_address)dyn_storage",
            "contract": "PairFactory",
            "src": "contracts/factories/PairFactory.sol:32"
          },
          {
            "label": "pairManagers",
            "offset": 0,
            "slot": "160",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "PairFactory",
            "src": "contracts/factories/PairFactory.sol:34"
          },
          {
            "label": "whitelistedAMO",
            "offset": 0,
            "slot": "161",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "PairFactory",
            "src": "contracts/factories/PairFactory.sol:35"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_bool,t_address)))": {
            "label": "mapping(address => mapping(address => mapping(bool => address)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bool,t_address))": {
            "label": "mapping(address => mapping(bool => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bool,t_address)": {
            "label": "mapping(bool => address)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "500c8694f01ca5ead488709935d271c47827dcbef39dd0795665afac97813ad4": {
      "address": "0x61E255E0e18a450504cE00dec1971fBAd625e77c",
      "txHash": "0xd1b0b7920a9b45a8acddf337409cee0d9033e62891d1e00f8d169c97020625ad",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "MulticallUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/MulticallUpgradeable.sol:51"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "factory",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IPairFactory)35440",
            "contract": "SingleTokenLiquidityProvider",
            "src": "contracts/SingleTokenLiquidityProvider.sol:22"
          },
          {
            "label": "requiresWhitelisting",
            "offset": 20,
            "slot": "151",
            "type": "t_bool",
            "contract": "SingleTokenLiquidityProvider",
            "src": "contracts/SingleTokenLiquidityProvider.sol:25"
          },
          {
            "label": "maxSwapRatio",
            "offset": 0,
            "slot": "152",
            "type": "t_uint256",
            "contract": "SingleTokenLiquidityProvider",
            "src": "contracts/SingleTokenLiquidityProvider.sol:28"
          },
          {
            "label": "isWhitelisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "SingleTokenLiquidityProvider",
            "src": "contracts/SingleTokenLiquidityProvider.sol:31"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IPairFactory)35440": {
            "label": "contract IPairFactory",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "74fb9cbd12b8798633f728e10d75c58ce01d557926cfafdcfa33cb3ee97931c0": {
      "address": "0xCc31cC4C8Cf6e11F7B54a0770C87378C98332AaC",
      "txHash": "0x8000868e9de2834dc51fcf2d6d2c8bb6ab183f9a320886efa16a78f28c093a54",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "gaugeBeacon",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(UpgradeableBeacon)4797",
            "contract": "GaugeFactory",
            "src": "contracts/factories/GaugeFactory.sol:12"
          },
          {
            "label": "gaugeAddress",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_address)dyn_storage",
            "contract": "GaugeFactory",
            "src": "contracts/factories/GaugeFactory.sol:14"
          },
          {
            "label": "last_gauge",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "GaugeFactory",
            "src": "contracts/factories/GaugeFactory.sol:15"
          },
          {
            "label": "gaugeImplementation",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "GaugeFactory",
            "src": "contracts/factories/GaugeFactory.sol:16"
          },
          {
            "label": "distributors",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "GaugeFactory",
            "src": "contracts/factories/GaugeFactory.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(UpgradeableBeacon)4797": {
            "label": "contract UpgradeableBeacon",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "4cedcf4a9dc61bcbfede69b99c9c52535afc49e02684735bf6ceb913717ecb61": {
      "address": "0xFb55d1382AfA22e71e4603F47B458F0190e0aCc3",
      "txHash": "0x172a86d21b6be8d0d6ba4421d8ede16a217f972516c149e826ed0c81a11f5378",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    }
  }
}
